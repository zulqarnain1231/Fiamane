import React from "react";

interface Props {
  fill?: string;
  stroke?: string;
  ClassName: string;
}

export const Location: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    viewBox="0 0 14 16"
    fill={fill}
    className={ClassName}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M0.600098 6.41953C0.600098 2.88491 3.46548 0.0195312 7.0001 0.0195312C10.5347 0.0195312 13.4001 2.88491 13.4001 6.41953C13.4001 7.1332 13.1836 7.90885 12.879 8.66255C12.5701 9.42674 12.147 10.225 11.682 10.9995C10.7519 12.5486 9.61838 14.0617 8.78864 15.1083C7.86696 16.2709 6.13324 16.2709 5.21155 15.1083C4.38182 14.0617 3.24829 12.5486 2.31822 10.9995C1.85322 10.225 1.43009 9.42674 1.1212 8.66255C0.81655 7.90885 0.600098 7.1332 0.600098 6.41953ZM7.0001 1.61953C4.34913 1.61953 2.2001 3.76856 2.2001 6.41953C2.2001 6.83681 2.33338 7.39195 2.6046 8.06295C2.87158 8.72346 3.25045 9.44382 3.68997 10.1759C4.56896 11.6399 5.65461 13.0917 6.46533 14.1143C6.74643 14.4689 7.25376 14.4689 7.53486 14.1143C8.34558 13.0917 9.43123 11.6399 10.3102 10.1759C10.7497 9.44382 11.1286 8.72346 11.3956 8.06295C11.6668 7.39195 11.8001 6.83681 11.8001 6.41953C11.8001 3.76856 9.65106 1.61953 7.0001 1.61953ZM7.0001 5.61953C6.55827 5.61953 6.2001 5.9777 6.2001 6.41953C6.2001 6.86136 6.55827 7.21953 7.0001 7.21953C7.44192 7.21953 7.8001 6.86136 7.8001 6.41953C7.8001 5.9777 7.44192 5.61953 7.0001 5.61953ZM4.6001 6.41953C4.6001 5.09405 5.67461 4.01953 7.0001 4.01953C8.32558 4.01953 9.4001 5.09405 9.4001 6.41953C9.4001 7.74502 8.32558 8.81953 7.0001 8.81953C5.67461 8.81953 4.6001 7.74502 4.6001 6.41953Z"
      fill={fill}
    />
  </svg>
);

export const User: React.FC<Props> = ({ fill, stroke, ClassName }: Props) => (
  <svg
    width="40"
    height="40"
    viewBox="0 0 40 40"
    className={ClassName}
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M20 35C28.2843 35 35 28.2843 35 20C35 11.7157 28.2843 5 20 5C11.7157 5 5 11.7157 5 20C5 28.2843 11.7157 35 20 35Z"
      stroke={stroke}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M20 25C23.4518 25 26.25 22.2018 26.25 18.75C26.25 15.2982 23.4518 12.5 20 12.5C16.5482 12.5 13.75 15.2982 13.75 18.75C13.75 22.2018 16.5482 25 20 25Z"
      stroke={stroke}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M9.96875 31.1572C10.9092 29.3047 12.3443 27.7489 14.1149 26.6621C15.8855 25.5753 17.9225 25 20 25C22.0775 25 24.1145 25.5753 25.8851 26.6621C27.6557 27.7489 29.0908 29.3047 30.0312 31.1572"
      stroke={stroke}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const ArrowDown: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="10"
    height="6"
    viewBox="0 0 10 6"
    className={ClassName}
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M8.5999 1.20078L5.28275 4.51794C5.12654 4.67415 4.87327 4.67415 4.71706 4.51794L1.3999 1.20078"
      stroke={stroke}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const Logout: React.FC<Props> = ({ fill, stroke, ClassName }: Props) => (
  <svg
    viewBox="0 0 19 20"
    className={ClassName}
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M8 1C8 0.447715 8.44772 0 9 0H14.6C17.0301 0 19 1.96995 19 4.4V15.6C19 18.0301 17.0301 20 14.6 20H9C8.44772 20 8 19.5523 8 19C8 18.4477 8.44772 18 9 18H14.6C15.9255 18 17 16.9255 17 15.6V4.4C17 3.07452 15.9255 2 14.6 2H9C8.44772 2 8 1.55228 8 1ZM5.70711 5.29289C6.09763 5.68342 6.09763 6.31658 5.70711 6.70711L3.41421 9H13C13.5523 9 14 9.44771 14 10C14 10.5523 13.5523 11 13 11H3.41421L5.70711 13.2929C6.09763 13.6834 6.09763 14.3166 5.70711 14.7071C5.31658 15.0976 4.68342 15.0976 4.29289 14.7071L0.292893 10.7071C-0.0976311 10.3166 -0.0976311 9.68342 0.292893 9.29289L4.29289 5.29289C4.68342 4.90237 5.31658 4.90237 5.70711 5.29289Z"
      fill={fill}
    />
  </svg>
);

export const ArrowRight: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="8"
    height="14"
    className={ClassName}
    viewBox="0 0 8 14"
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M1 0.999999L6.73316 6.39391C7.08895 6.72864 7.08895 7.27136 6.73316 7.60609L1 13"
      stroke={stroke}
      strokeWidth="2"
      strokeLinecap="round"
    />
  </svg>
);

export const Edit: React.FC<Props> = ({ fill, stroke, ClassName }: Props) => (
  <svg
    width="19"
    height="19"
    viewBox="0 0 19 19"
    fill={fill}
    className={ClassName}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      stroke={stroke}
      clipRule="evenodd"
      d="M13.5772 1.44908C14.2802 0.746138 15.4199 0.74614 16.1228 1.44908L17.55 2.87629C18.253 3.57923 18.253 4.71893 17.55 5.42188L6.37102 16.6009L3.45732 17.9253C1.9432 18.6135 0.385579 17.0559 1.07382 15.5418L2.39822 12.6281L13.5772 1.44908ZM12.9728 4.59908L14.4 6.02629L16.2772 4.14908L14.85 2.72187L12.9728 4.59908ZM13.1272 7.29908L11.7 5.87187L3.90182 13.6701L2.71248 16.2866L5.32902 15.0973L13.1272 7.29908Z"
      fill={fill}
    />
  </svg>
);

export const DollarIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="75"
    height="75"
    viewBox="0 0 75 75"
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clip-path="url(#clip0_563_24636)">
      <path
        d="M24.4438 48.3594H2.19727C1.61451 48.3594 1.05563 48.5909 0.643564 49.0029C0.231497 49.415 0 49.9739 0 50.5566L0 58.1548C0.00504022 62.621 1.78147 66.9028 4.93956 70.0609C8.09765 73.219 12.3795 74.9954 16.8457 75.0005H24.4438C25.0266 75.0005 25.5855 74.769 25.9976 74.3569C26.4096 73.9449 26.6411 73.386 26.6411 72.8032V50.5566C26.6411 49.9739 26.4096 49.415 25.9976 49.0029C25.5855 48.5909 25.0266 48.3594 24.4438 48.3594Z"
        fill="url(#paint0_linear_563_24636)"
      />
      <path
        d="M72.8027 0H24.4629C23.8801 0 23.3213 0.231497 22.9092 0.643564C22.4971 1.05563 22.2656 1.61451 22.2656 2.19727V75H58.1543C62.6221 75 66.9068 73.2252 70.066 70.066C73.2252 66.9068 75 62.6221 75 58.1543V2.19727C75 1.61451 74.7685 1.05563 74.3564 0.643564C73.9444 0.231497 73.3855 0 72.8027 0V0Z"
        fill="#FAF7F5"
      />
      <path
        d="M72.8027 0H24.4629C23.8801 0 23.3213 0.231497 22.9092 0.643564C22.4971 1.05563 22.2656 1.61451 22.2656 2.19727V4.39453H47.6338C53.7263 4.39453 59.5692 6.81475 63.8772 11.1228C68.1852 15.4308 70.6055 21.2737 70.6055 27.3662V62.5488C70.6111 65.9435 69.5854 69.2599 67.6641 72.0586C69.9267 70.5136 71.7777 68.4393 73.0562 66.0161C74.3347 63.5929 75.0019 60.8941 75 58.1543V2.19727C75 1.61451 74.7685 1.05563 74.3564 0.643564C73.9444 0.231497 73.3855 0 72.8027 0V0Z"
        fill="url(#paint1_linear_563_24636)"
      />
      <path
        d="M50.2193 32.398C45.8687 30.5977 44.6104 29.4946 44.6104 27.4775C44.6104 25.856 45.7823 23.9619 49.0943 23.9619C51.1301 23.9403 53.1324 24.4812 54.8804 25.5249C54.9631 25.5722 55.0551 25.6009 55.15 25.6093C55.2448 25.6176 55.3404 25.6052 55.4301 25.5731C55.5197 25.5409 55.6013 25.4897 55.6693 25.423C55.7373 25.3562 55.79 25.2756 55.8238 25.1865L57.0367 21.9844C57.0916 21.8385 57.0932 21.678 57.0412 21.5311C56.9892 21.3842 56.8869 21.2604 56.7525 21.1816C55.0064 20.1563 53.045 19.582 50.7715 19.4238V15.3486C50.7717 15.262 50.7548 15.1762 50.7217 15.0961C50.6887 15.0161 50.6401 14.9433 50.5789 14.8821C50.5176 14.8208 50.4449 14.7723 50.3648 14.7392C50.2848 14.7062 50.199 14.6893 50.1124 14.6895H47.105C47.0184 14.6893 46.9326 14.7062 46.8525 14.7392C46.7725 14.7723 46.6997 14.8208 46.6385 14.8821C46.5772 14.9433 46.5287 15.0161 46.4956 15.0961C46.4626 15.1762 46.4457 15.262 46.4459 15.3486V19.7007C41.9751 20.6397 39.1216 23.8696 39.1216 28.0591C39.1216 33.0718 43.1705 35.3496 47.5386 37.0635C51.1392 38.5283 52.6084 40.0181 52.6084 42.2256C52.6084 44.6367 50.5049 46.3198 47.4947 46.3198C45.1422 46.313 42.8416 45.6274 40.8692 44.3452C40.7859 44.2898 40.691 44.254 40.5918 44.2407C40.4926 44.2273 40.3917 44.2368 40.2967 44.2683C40.2016 44.2997 40.115 44.3524 40.0434 44.4224C39.9718 44.4923 39.9171 44.5776 39.8833 44.6719L38.7115 47.9224C38.6633 48.0575 38.6604 48.2046 38.7032 48.3414C38.746 48.4783 38.8322 48.5976 38.9488 48.6812C40.6612 49.9028 43.4092 50.7539 46.0958 50.9121V55.1792C46.0961 55.3539 46.1657 55.5213 46.2893 55.6449C46.4128 55.7684 46.5802 55.838 46.7549 55.8384H49.8121C49.9868 55.838 50.1542 55.7684 50.2777 55.6449C50.4013 55.5213 50.4709 55.3539 50.4712 55.1792V50.6836C55.0796 49.7036 58.1368 46.2305 58.1368 41.8945C58.1543 37.5 55.774 34.6641 50.2193 32.398Z"
        fill="#FF8501"
      />
    </g>
    <defs>
      <linearGradient
        id="paint0_linear_563_24636"
        x1="13.3206"
        y1="48.3594"
        x2="13.5"
        y2="75.5005"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#F0E6E2" />
        <stop offset="1" stop-color="#F0E6E2" stop-opacity="0" />
      </linearGradient>
      <linearGradient
        id="paint1_linear_563_24636"
        x1="48.6328"
        y1="0"
        x2="57.5"
        y2="26"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#F5EEEC" />
        <stop offset="1" stop-color="#F5EEEC" stop-opacity="0" />
      </linearGradient>
      <clipPath id="clip0_563_24636">
        <rect width="75" height="75" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

export const Download: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="18"
    height="20"
    viewBox="0 0 18 20"
    className={ClassName}
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      stroke={stroke}
      clipRule="evenodd"
      d="M2 15.1C2 16.4255 3.07452 17.5 4.4 17.5H13.6C14.9255 17.5 16 16.4255 16 15.1V13.5C16 12.9477 16.4477 12.5 17 12.5C17.5523 12.5 18 12.9477 18 13.5V15.1C18 17.5301 16.0301 19.5 13.6 19.5H4.4C1.96995 19.5 0 17.5301 0 15.1L0 13.5C0 12.9477 0.447715 12.5 1 12.5C1.55228 12.5 2 12.9477 2 13.5V15.1ZM4.29289 8.79289C4.68342 8.40237 5.31658 8.40237 5.70711 8.79289L8 11.0858L8 1.5C8 0.947716 8.44772 0.5 9 0.5C9.55229 0.5 10 0.947716 10 1.5L10 11.0858L12.2929 8.79289C12.6834 8.40237 13.3166 8.40237 13.7071 8.79289C14.0976 9.18342 14.0976 9.81658 13.7071 10.2071L9.70711 14.2071C9.31658 14.5976 8.68342 14.5976 8.29289 14.2071L4.29289 10.2071C3.90237 9.81658 3.90237 9.18342 4.29289 8.79289Z"
      fill={fill}
    />
  </svg>
);

export const Close: React.FC<Props> = ({ fill, stroke, ClassName }: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 18 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M1.01015 1.00966C1.55688 0.462926 2.44331 0.462926 2.99005 1.00966L9.0001 7.01971L15.0101 1.00966C15.5569 0.462926 16.4433 0.462926 16.99 1.00966C17.5368 1.55639 17.5368 2.44282 16.99 2.98956L10.98 8.99961L16.99 15.0097C17.5368 15.5564 17.5368 16.4428 16.99 16.9896C16.4433 17.5363 15.5569 17.5363 15.0101 16.9896L9.0001 10.9795L2.99005 16.9896C2.44331 17.5363 1.55688 17.5363 1.01015 16.9896C0.463414 16.4428 0.463414 15.5564 1.01015 15.0097L7.0202 8.99961L1.01015 2.98956C0.463414 2.44282 0.463414 1.55639 1.01015 1.00966Z"
      fill={fill}
    />
  </svg>
);

export const Google: React.FC<Props> = ({ fill, stroke, ClassName }: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M43.611 20.083H42V20H24V28H35.303C33.654 32.657 29.223 36 24 36C17.373 36 12 30.627 12 24C12 17.373 17.373 12 24 12C27.059 12 29.842 13.154 31.961 15.039L37.618 9.382C34.046 6.053 29.268 4 24 4C12.955 4 4 12.955 4 24C4 35.045 12.955 44 24 44C35.045 44 44 35.045 44 24C44 22.659 43.862 21.35 43.611 20.083Z"
      fill="#FFC107"
    />
    <path
      d="M6.30615 14.691L12.8772 19.51C14.6552 15.108 18.9612 12 24.0002 12C27.0592 12 29.8422 13.154 31.9612 15.039L37.6182 9.382C34.0462 6.053 29.2682 4 24.0002 4C16.3182 4 9.65615 8.337 6.30615 14.691Z"
      fill="#FF3D00"
    />
    <path
      d="M23.9998 44.0007C29.1658 44.0007 33.8598 42.0237 37.4088 38.8087L31.2188 33.5707C29.2108 35.0917 26.7148 36.0007 23.9998 36.0007C18.7978 36.0007 14.3808 32.6837 12.7168 28.0547L6.19482 33.0797C9.50482 39.5567 16.2268 44.0007 23.9998 44.0007Z"
      fill="#4CAF50"
    />
    <path
      d="M43.611 20.083H42V20H24V28H35.303C34.511 30.237 33.072 32.166 31.216 33.571L31.219 33.569L37.409 38.807C36.971 39.205 44 34 44 24C44 22.659 43.862 21.35 43.611 20.083Z"
      fill="#1976D2"
    />
  </svg>
);

export const Facebook: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 48 48"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M24 4C12.954 4 4 12.954 4 24C4 35.046 12.954 44 24 44C35.046 44 44 35.046 44 24C44 12.954 35.046 4 24 4Z"
      fill="url(#paint0_linear_1809_32278)"
    />
    <path
      d="M26.7071 29.3019H31.8831L32.6961 24.0439H26.7071V21.1699C26.7071 18.9859 27.4211 17.0489 29.4641 17.0489H32.7471V12.4609C32.1701 12.3829 30.9501 12.2129 28.6451 12.2129C23.8311 12.2129 21.0091 14.7549 21.0091 20.5469V24.0449H16.0601V29.3029H21.0081V43.7549C21.9881 43.9009 22.9811 44.0009 24.0001 44.0009C24.9211 44.0009 25.8201 43.9169 26.7071 43.7969V29.3019Z"
      fill="white"
    />
    <defs>
      <linearGradient
        id="paint0_linear_1809_32278"
        x1="9.993"
        y1="9.993"
        x2="40.615"
        y2="40.615"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#2AA4F4" />
        <stop offset="1" stop-color="#007AD9" />
      </linearGradient>
    </defs>
  </svg>
);

export const ArrowBack: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 26 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M10.8509 0.609269C11.4105 1.156 11.4105 2.04243 10.8509 2.58917L4.69932 8.59922H24.1674C24.9588 8.59922 25.6004 9.22602 25.6004 9.99922C25.6004 10.7724 24.9588 11.3992 24.1674 11.3992H4.69932L10.8509 17.4093C11.4105 17.956 11.4105 18.8424 10.8509 19.3892C10.2913 19.9359 9.38401 19.9359 8.82439 19.3892L1.23981 11.9791C0.120585 10.8856 0.120585 9.11279 1.23981 8.01932L8.82439 0.609269C9.38401 0.0625352 10.2913 0.0625352 10.8509 0.609269Z"
      fill={fill}
    />
  </svg>
);

export const ShowIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="18"
    height="16"
    className={ClassName}
    viewBox="0 0 18 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M2.75993 3.50762C4.346 2.07631 6.57712 0.800781 9 0.800781C11.4229 0.800781 13.654 2.07631 15.2401 3.50762C16.0421 4.23143 16.7126 5.024 17.1893 5.7745C17.6439 6.49036 18 7.28882 18 8.00078C18 8.71939 17.6308 9.52129 17.1686 10.2342C16.6826 10.9836 16.0018 11.7747 15.1939 12.4968C13.5994 13.9221 11.3686 15.2008 9 15.2008C6.63138 15.2008 4.40063 13.9221 2.8061 12.4968C1.99825 11.7747 1.31739 10.9836 0.831441 10.2342C0.369182 9.52129 0 8.71939 0 8.00078C0 7.28882 0.356066 6.49036 0.810749 5.7745C1.28743 5.024 1.95786 4.23143 2.75993 3.50762ZM2.33017 6.73956C1.9274 7.3737 1.8 7.81274 1.8 8.00078C1.8 8.18217 1.92861 8.61778 2.34173 9.25488C2.73115 9.85544 3.30323 10.5269 4.00568 11.1548C5.43175 12.4295 7.251 13.4008 9 13.4008C10.749 13.4008 12.5683 12.4295 13.9943 11.1548C14.6968 10.5269 15.2689 9.85544 15.6583 9.25488C16.0714 8.61778 16.2 8.18217 16.2 8.00078C16.2 7.81274 16.0726 7.3737 15.6698 6.73956C15.2891 6.14006 14.728 5.47013 14.0341 4.84394C12.6283 3.57525 10.8094 2.60078 9 2.60078C7.1906 2.60078 5.37172 3.57525 3.96586 4.84394C3.27196 5.47013 2.71095 6.14006 2.33017 6.73956ZM9 6.20078C8.00589 6.20078 7.2 7.00667 7.2 8.00078C7.2 8.99489 8.00589 9.80078 9 9.80078C9.99411 9.80078 10.8 8.99489 10.8 8.00078C10.8 7.00667 9.99411 6.20078 9 6.20078ZM5.4 8.00078C5.4 6.01256 7.01178 4.40078 9 4.40078C10.9882 4.40078 12.6 6.01256 12.6 8.00078C12.6 9.98901 10.9882 11.6008 9 11.6008C7.01178 11.6008 5.4 9.98901 5.4 8.00078Z"
      stroke={stroke}
      fill={fill}
    />
  </svg>
);

export const Mail: React.FC<Props> = ({ fill, stroke, ClassName }: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 18 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M0 3.50078C0 2.00961 1.20883 0.800781 2.7 0.800781H15.3C16.7912 0.800781 18 2.00961 18 3.50078V12.5008C18 13.992 16.7912 15.2008 15.3 15.2008H2.7C1.20883 15.2008 0 13.992 0 12.5008V3.50078ZM3.07279 2.60078L8.3636 7.89159C8.71508 8.24307 9.28492 8.24307 9.6364 7.89159L14.9272 2.60078H3.07279ZM16.2 3.87357L10.9092 9.16439C9.85477 10.2188 8.14523 10.2188 7.09081 9.16439L1.8 3.87357V12.5008C1.8 12.9978 2.20294 13.4008 2.7 13.4008H15.3C15.7971 13.4008 16.2 12.9978 16.2 12.5008V3.87357Z"
      fill={fill}
    />
  </svg>
);

export const HiddenPassword: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 14 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M2.05 13.9508C2.05 14.9449 2.85589 15.7508 3.85 15.7508H10.15C11.1441 15.7508 11.95 14.9449 11.95 13.9508V9.45078C11.95 8.45667 11.1441 7.65078 10.15 7.65078H3.85C2.85589 7.65078 2.05 8.45667 2.05 9.45078L2.05 13.9508ZM3.85 17.5508C1.86177 17.5508 0.25 15.939 0.25 13.9508L0.25 9.45078C0.25 7.77333 1.3973 6.36384 2.95 5.9642V4.50078C2.95 3.83176 3.1433 2.84826 3.74962 2.00616C4.38898 1.11816 5.44667 0.450783 7 0.450783C7.66902 0.450783 8.65252 0.644085 9.49462 1.2504C10.3826 1.88976 11.05 2.94745 11.05 4.50078V5.9642C12.6027 6.36384 13.75 7.77333 13.75 9.45078V13.9508C13.75 15.939 12.1382 17.5508 10.15 17.5508H3.85ZM9.25 5.85078V4.50078C9.25 3.53411 8.86738 3.01681 8.44288 2.71116C7.97248 2.37248 7.38098 2.25078 7 2.25078C6.03333 2.25078 5.51602 2.6334 5.21038 3.05791C4.8717 3.5283 4.75 4.1198 4.75 4.50078V5.85078H9.25Z"
      fill={fill}
    />
  </svg>
);

export const UserHollow: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 18 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M9.00017 2.70039C7.50901 2.70039 6.30017 3.90922 6.30017 5.40039C6.30017 6.89156 7.50901 8.10039 9.00017 8.10039C10.4913 8.10039 11.7002 6.89156 11.7002 5.40039C11.7002 3.90922 10.4913 2.70039 9.00017 2.70039ZM4.50017 5.40039C4.50017 2.91511 6.51489 0.900391 9.00017 0.900391C11.4855 0.900391 13.5002 2.91511 13.5002 5.40039C13.5002 7.88567 11.4855 9.90039 9.00017 9.90039C6.51489 9.90039 4.50017 7.88567 4.50017 5.40039ZM3.6136 12.8914C4.90082 12.1247 6.66279 11.7004 9.00017 11.7004C11.3376 11.7004 13.0995 12.1247 14.3867 12.8914C15.6956 13.6709 16.4484 14.7664 16.814 15.9605C16.9595 16.4358 16.6921 16.939 16.2168 17.0845C15.7416 17.23 15.2383 16.9627 15.0928 16.4874C14.8481 15.688 14.362 14.9717 13.4657 14.4378C12.5477 13.8911 11.1382 13.5004 9.00017 13.5004C6.8621 13.5004 5.45263 13.8911 4.53469 14.4378C3.63836 14.9717 3.1523 15.688 2.90754 16.4874C2.76203 16.9627 2.25878 17.23 1.7835 17.0845C1.30822 16.939 1.04089 16.4358 1.18639 15.9605C1.55197 14.7664 2.30478 13.6709 3.6136 12.8914Z"
      fill={fill}
    />
  </svg>
);

export const Company: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 18 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M4.4999 2.7C4.4999 1.20883 5.70873 0 7.1999 0H14.3999C15.8911 0 17.0999 1.20883 17.0999 2.7V15.3C17.0999 16.7912 15.8911 18 14.3999 18H13.4999C12.5058 18 11.6999 17.1941 11.6999 16.2V14.4C11.6999 14.244 11.6457 13.99 11.5095 13.8009C11.4064 13.6576 11.2266 13.5 10.7999 13.5C10.3732 13.5 10.1934 13.6576 10.0903 13.8009C9.9541 13.99 9.8999 14.244 9.8999 14.4V16.2C9.8999 17.1941 9.09402 18 8.0999 18H3.5999C2.10873 18 0.899902 16.7912 0.899902 15.3V6.3C0.899902 4.80883 2.10873 3.6 3.5999 3.6H4.4999V2.7ZM4.4999 5.4H3.5999C3.10285 5.4 2.6999 5.80294 2.6999 6.3V15.3C2.6999 15.7971 3.10285 16.2 3.5999 16.2H4.4999V5.4ZM6.2999 16.2H8.0999V14.4C8.0999 13.956 8.22571 13.31 8.62952 12.7491C9.06638 12.1424 9.78657 11.7 10.7999 11.7C11.8132 11.7 12.5334 12.1424 12.9703 12.7491C13.3741 13.31 13.4999 13.956 13.4999 14.4V16.2H14.3999C14.897 16.2 15.2999 15.7971 15.2999 15.3V2.7C15.2999 2.20294 14.897 1.8 14.3999 1.8H7.1999C6.70285 1.8 6.2999 2.20294 6.2999 2.7V16.2ZM8.9999 3.6C9.49696 3.6 9.8999 4.00294 9.8999 4.5V5.4C9.8999 5.89706 9.49696 6.3 8.9999 6.3C8.50285 6.3 8.0999 5.89706 8.0999 5.4V4.5C8.0999 4.00294 8.50285 3.6 8.9999 3.6ZM12.5999 3.6C13.097 3.6 13.4999 4.00294 13.4999 4.5V5.4C13.4999 5.89706 13.097 6.3 12.5999 6.3C12.1028 6.3 11.6999 5.89706 11.6999 5.4V4.5C11.6999 4.00294 12.1028 3.6 12.5999 3.6ZM8.9999 8.1C9.49696 8.1 9.8999 8.50294 9.8999 9V9.9C9.8999 10.3971 9.49696 10.8 8.9999 10.8C8.50285 10.8 8.0999 10.3971 8.0999 9.9V9C8.0999 8.50294 8.50285 8.1 8.9999 8.1ZM12.5999 8.1C13.097 8.1 13.4999 8.50294 13.4999 9V9.9C13.4999 10.3971 13.097 10.8 12.5999 10.8C12.1028 10.8 11.6999 10.3971 11.6999 9.9V9C11.6999 8.50294 12.1028 8.1 12.5999 8.1Z"
      fill={fill}
    />
  </svg>
);

export const ShowPassword: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 18 10"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M8.59559 0.00807848C3.592 0.226638 0.270839 4.31248 0.139741 4.48728C0.0959986 4.53102 0.0742033 4.59656 0.0524082 4.66209C-0.0349245 4.81511 -0.0131295 5.03352 0.117946 5.1646C2.93648 8.11439 5.90813 9.62194 8.98894 9.62194C14.1892 9.62194 17.707 5.31755 17.8599 5.14275C17.8817 5.09901 17.9037 5.05542 17.9255 5.01167L17.9692 4.90239C18.0348 4.74937 17.991 4.57471 17.8819 4.44347C14.9102 1.36277 11.7858 -0.123125 8.59574 0.00797311L8.59559 0.00807848ZM8.98896 7.91769C7.17544 7.91769 5.7115 6.60662 5.7115 4.81502C5.7115 3.02326 7.17544 1.71236 8.98896 1.71236C10.8025 1.71236 12.2664 3.02342 12.2664 4.81502C12.2664 6.60662 10.8024 7.91769 8.98896 7.91769Z"
      fill={fill}
    />
  </svg>
);

export const HidePassword: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    className={ClassName}
    viewBox="0 0 18 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M17.5314 7.16631C16.9062 6.48437 15.978 5.65087 14.7657 4.91211L11.9433 7.73458C12.0001 7.94296 12.019 8.17023 12.019 8.3786C12.019 10.0456 10.6742 11.4095 9.00718 11.4095C8.77991 11.4095 8.57154 11.3906 8.34413 11.3338L6.48779 13.1901C7.26447 13.3796 8.09798 13.4932 9.00715 13.4932C13.2313 13.4932 16.1106 11.1254 17.5313 9.60998C18.1564 8.90901 18.1564 7.86717 17.5313 7.16633L17.5314 7.16631Z"
      fill={fill}
    />
    <path
      d="M15.8643 0.764582C15.4855 0.385764 14.8792 0.385764 14.5004 0.764582L11.659 3.60596C10.8446 3.39759 9.95428 3.28396 9.00715 3.28396C4.78297 3.28396 1.9037 5.65177 0.483009 7.16718C-0.161003 7.84911 -0.161003 8.90989 0.483009 9.6107C1.12702 10.3115 2.09319 11.1829 3.3433 11.9217L1.39222 13.8729C1.0134 14.2517 1.0134 14.858 1.39222 15.2368C1.5817 15.4262 1.82786 15.5209 2.07415 15.5209C2.32044 15.5209 2.56662 15.4261 2.75608 15.2368L15.8643 2.12853C16.2433 1.74971 16.2433 1.14362 15.8643 0.764666L15.8643 0.764582ZM5.99522 8.37948C5.99522 6.71251 7.34021 5.36765 9.00705 5.36765C9.27224 5.36765 9.53744 5.40558 9.80264 5.48129L6.0899 9.17509C6.03295 8.92892 5.99516 8.66374 5.99516 8.3795L5.99522 8.37948Z"
      fill={fill}
    />
  </svg>
);

// =======> category icon
export const categoryOne: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="24"
      height="23"
      className={ClassName}
      viewBox="0 0 24 23"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M11.5 22.5L3 17.965V14.012L8.4 17.134L11.5 13.728V22.5ZM12.5 22.499V13.693L15.662 17.036L21 14.078V17.965L12.5 22.499ZM2.161 12.374L0 11.13L3 7.828L0 5.005L8.718 0.5L11.933 2.885L15.258 0.5L24 5.061L21.005 7.832L24 11.275L21.758 12.516L15.855 15.785L12.507 12.244L19.923 8.282L12.001 3.91L4.078 8.282L11.5 12.219V12.243L8.203 15.865L3 12.857L2.84 12.765L2.161 12.372V12.374Z"
        fill={fill}
      />
    </svg>
  );
};

export const categoryTwo: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="24"
      height="21"
      viewBox="0 0 24 21"
      fill={fill}
      className={ClassName}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M24 20.5H0V5.5H24V20.5ZM9 0.5C7.896 0.5 7 1.396 7 2.5V4.5H9V3C9 2.724 9.224 2.5 9.5 2.5H14.5C14.776 2.5 15 2.724 15 3V4.5H17V2.5C17 1.396 16.104 0.5 15 0.5H9Z"
        fill={fill}
      />
    </svg>
  );
};

export const categoryThree: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="30"
      height="25"
      viewBox="0 0 30 25"
      fill={fill}
      className={ClassName}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M26.25 8.75C26.94 8.75 27.5 9.31125 27.5 10V21.25C27.5 21.9387 26.94 22.5 26.25 22.5H3.75C3.06 22.5 2.5 21.9387 2.5 21.25V10C2.5 9.31125 3.06 8.75 3.75 8.75H26.25ZM26.25 6.25H3.75C1.67875 6.25 0 7.92875 0 10V21.25C0 23.3212 1.67875 25 3.75 25H26.25C28.3212 25 30 23.3212 30 21.25V10C30 7.92875 28.3212 6.25 26.25 6.25ZM11.25 0C9.87 0 8.75 1.12 8.75 2.5V5H11.25V3.125C11.25 2.78 11.53 2.5 11.875 2.5H18.125C18.47 2.5 18.75 2.78 18.75 3.125V5H21.25V2.5C21.25 1.12 20.13 0 18.75 0H11.25ZM24.375 11.25H5.625C5.28 11.25 5 11.53 5 11.875C5 12.22 5.28 12.5 5.625 12.5H24.375C24.72 12.5 25 12.22 25 11.875C25 11.53 24.72 11.25 24.375 11.25ZM24.375 15H5.625C5.28 15 5 15.28 5 15.625C5 15.97 5.28 16.25 5.625 16.25H24.375C24.72 16.25 25 15.97 25 15.625C25 15.28 24.72 15 24.375 15ZM24.375 18.75H5.625C5.28 18.75 5 19.03 5 19.375C5 19.72 5.28 20 5.625 20H24.375C24.72 20 25 19.72 25 19.375C25 19.03 24.72 18.75 24.375 18.75Z"
        fill={fill}
      />
    </svg>
  );
};
export const categoryFour: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="30"
      height="17"
      viewBox="0 0 30 17"
      fill={fill}
      className={ClassName}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M2.81277 15.7285H4.68773V16.941H2.81277V15.7285Z"
        // fill="#FF8501"
        fill={fill}
      />
      <path
        d="M25.3129 15.7285H27.1878V16.941H25.3129V15.7285Z"
        // fill="#FF8501"
        fill={fill}
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M4.39935 6.62772V11.5968H25.601V6.62772C25.6019 6.20415 25.7703 5.79817 26.0694 5.49843C26.3686 5.19872 26.7741 5.02934 27.1977 5.02772C27.1977 0.0585938 26.7009 0.0585938 15.0133 0.0585938C3.32578 0.0585938 2.84543 0.0585938 2.82887 5.02772H2.8291C3.24781 5.03627 3.64664 5.20866 3.94011 5.50767C4.23358 5.80669 4.39834 6.20879 4.39926 6.62774L4.39935 6.62772Z"
        // fill="#FF8501"
        fill={fill}
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M29.0627 5.69043H27.1878C26.9415 5.6939 26.7065 5.79418 26.5334 5.96958C26.3606 6.14496 26.2635 6.38159 26.2635 6.62793V12.2595H3.73679V6.62793C3.73679 6.37929 3.63789 6.14081 3.46204 5.96496C3.28618 5.78911 3.04794 5.69044 2.79931 5.69044H0.937485C0.688845 5.69044 0.450368 5.78911 0.27452 5.96496C0.0986664 6.14082 0 6.37929 0 6.62793V14.1343C0 14.3829 0.0986723 14.6214 0.27452 14.7972C0.450374 14.9731 0.688845 15.0718 0.937485 15.0718H29.0627H29.0625C29.3112 15.0718 29.5496 14.9731 29.7255 14.7972C29.9013 14.6214 30 14.3829 30 14.1343V6.62793C30 6.37929 29.9013 6.14081 29.7255 5.96496C29.5496 5.78911 29.3112 5.69044 29.0625 5.69044L29.0627 5.69043Z"
        // fill="#FF8501"
        fill={fill}
      />
    </svg>
  );
};
export const categoryFive: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="36"
      height="21"
      viewBox="0 0 36 21"
      fill={fill}
      className={ClassName}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M34.9166 16.1935V10.9436C34.9166 10.2402 34.4505 9.19356 33.1666 9.19356C31.8828 9.19356 31.4166 10.2402 31.4208 10.8886C31.4189 10.8951 31.2059 11.5269 29.0833 11.5269C26.87 11.5269 26.7557 10.468 26.75 10.3602C26.75 10.3154 26.7448 10.2704 26.7349 10.2266C26.5956 9.63394 26.0711 8.63058 24.9914 8.63058C24.3305 8.63058 23.6263 9.01391 22.8383 9.80191C22.6883 9.95191 22.5273 10.1233 22.3536 10.3076C21.2226 11.511 19.6873 13.1358 17.1539 13.2646L22.475 8.46024C22.6471 8.30503 22.7107 8.06311 22.6377 7.84305C22.6057 7.7467 22.3018 6.89932 21.4653 6.70219C21.2776 6.6574 21.0833 6.65609 20.8849 6.6876C20.8661 6.62641 20.8422 6.56573 20.8015 6.51157L17.3617 1.90091C16.5036 0.644909 15.5844 0.555043 15.0086 0.891776C14.3856 1.25532 14.1732 2.08191 14.4802 2.86704C14.427 3.12719 14.1809 3.8535 13.0429 4.62877C11.6127 5.60297 9.53064 4.59856 9.51091 4.5884C9.34242 4.50507 9.14528 4.50742 8.98018 4.59413C8.81456 4.68111 8.70076 4.84257 8.67393 5.02825L7.56533 12.7756C6.57887 12.954 4.14714 13.4266 3.15548 13.9219C1.44821 14.7753 1.14535 16.7021 1.09401 17.2089C0.753646 17.5016 0.5 17.955 0.5 18.618C0.5 19.2813 1.17033 19.6938 2.25 19.6938H9.09198C9.37011 20.0259 9.79612 20.2738 10.4167 20.2772L32.5833 20.2706C35.4667 20.2706 35.5 18.5982 35.5 18.5272V16.7772C35.5 16.4553 35.2393 16.1938 34.9167 16.1938L34.9166 16.1935ZM24.9906 9.79722C25.368 9.79722 25.556 10.3514 25.5919 10.4709C25.6487 10.9347 26.0641 12.6936 29.0833 12.6936C32.4854 12.6936 32.5833 11.1228 32.5833 10.9506C32.5904 10.681 32.6966 10.3602 33.1667 10.3602C33.6367 10.3602 33.743 10.681 33.75 10.9435V16.1935C33.75 17.257 32.857 17.3555 32.5805 17.3602H10.4165V16.7768C10.4165 14.4844 13.2154 14.444 13.3332 14.4435H16.8332C18.7728 14.4435 20.2532 13.6898 21.3832 12.8183L21.6707 13.1058C21.7845 13.2196 21.9339 13.2768 22.0832 13.2768C22.2324 13.2768 22.3819 13.2196 22.4957 13.106C22.7238 12.8779 22.7238 12.5091 22.4957 12.2813L22.2699 12.056C22.3907 11.9417 22.5056 11.8284 22.6157 11.7177L22.8373 11.9394C22.9511 12.0529 23.1006 12.1102 23.2498 12.1102C23.399 12.1102 23.5485 12.0529 23.6623 11.9394C23.8904 11.7112 23.8904 11.3425 23.6623 11.1146L23.4238 10.8761C23.5037 10.7927 23.5884 10.7011 23.6623 10.6271C24.3839 9.90526 24.8045 9.79719 24.9904 9.79719L24.9906 9.79722ZM21.1948 7.83736C21.2461 7.84908 21.2935 7.87824 21.3349 7.91679L15.3984 13.2769H14.8419L20.1596 8.44225C20.793 7.8071 21.1097 7.81809 21.1948 7.83736ZM3.67748 14.966C4.44755 14.5811 6.53295 14.1499 7.70014 13.9371C7.89103 14.2285 8.21577 14.4439 8.66681 14.4439C8.98946 14.4439 9.25014 14.1743 9.25014 13.8524C9.25014 13.5334 8.99285 13.2673 8.67488 13.2626L9.01368 10.892C9.08633 10.924 9.16498 10.9438 9.25014 10.9438H9.83347C10.1561 10.9438 10.4168 10.6824 10.4168 10.3605C10.4168 10.0386 10.1561 9.77717 9.83347 9.77717H9.25014C9.22149 9.77717 9.19754 9.78941 9.17019 9.79279L9.25587 9.19383H9.83348C10.1561 9.19383 10.4168 8.93237 10.4168 8.6105C10.4168 8.28863 10.1561 8.02717 9.83348 8.02717H9.4228L9.72384 5.92017C10.6613 6.22069 12.3225 6.52928 13.698 5.59231C15.6132 4.28864 15.661 2.92458 15.6598 2.77304C15.6592 2.68502 15.6387 2.59804 15.5996 2.5194C15.4322 2.17929 15.5285 1.93711 15.5949 1.89883C15.659 1.86159 15.9822 1.95143 16.4105 2.57849L19.8394 7.17455C19.679 7.2959 19.5163 7.4347 19.3535 7.59851L13.1001 13.2847C11.6465 13.3613 9.25012 14.154 9.25012 16.7772H2.3588C2.50802 16.2032 2.86088 15.3743 3.67753 14.966L3.67748 14.966ZM2.25015 18.5272C2.05771 18.5272 1.82021 18.4934 1.67854 18.4519C1.73792 18.0493 2.01786 17.9509 2.25015 17.9439H8.66681V18.5272H2.25015ZM32.5828 19.104L10.4201 19.1105C9.94696 19.1082 9.84019 18.7879 9.83342 18.5272H32.5834C33.1365 18.5272 33.75 18.3027 34.3334 17.7741V18.4939C34.3334 18.7051 33.9016 19.104 32.5828 19.104L32.5828 19.104Z"
        fill={fill}
      />
    </svg>
  );
};
export const LocationIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="100"
      className={ClassName}
      height="100"
      viewBox="0 0 100 100"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter0_i_445_24587)">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M35.22 16C28.4711 16 23 21.4711 23 28.22C23 29.5827 23.4133 31.0637 23.995 32.5028C24.5848 33.9619 25.3927 35.486 26.2805 36.9648C28.0564 39.9226 30.2207 42.8118 31.805 44.8101C33.5648 47.0299 36.8752 47.0299 38.635 44.8101C40.2193 42.8118 42.3836 39.9226 44.1595 36.9648C45.0473 35.486 45.8552 33.9619 46.445 32.5028C47.0267 31.0637 47.44 29.5827 47.44 28.22C47.44 21.4711 41.9689 16 35.22 16ZM30.6375 28.22C30.6375 25.6892 32.6892 23.6375 35.22 23.6375C37.7508 23.6375 39.8025 25.6892 39.8025 28.22C39.8025 30.7508 37.7508 32.8025 35.22 32.8025C32.6892 32.8025 30.6375 30.7508 30.6375 28.22Z"
          fill="url(#paint0_linear_445_24587)"
        />
      </g>
      <g filter="url(#filter1_i_445_24587)">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M68.5937 42.5625C61.8455 42.5625 56.375 47.9034 56.375 54.4918C56.375 55.822 56.7882 57.2678 57.3699 58.6727C57.9596 60.0971 58.7674 61.585 59.6552 63.0286C61.4309 65.916 63.595 68.7365 65.1791 70.6873C66.9388 72.8542 70.2487 72.8542 72.0084 70.6873C73.5925 68.7365 75.7566 65.916 77.5323 63.0286C78.4201 61.585 79.2279 60.0971 79.8176 58.6727C80.3993 57.2678 80.8125 55.822 80.8125 54.4918C80.8125 47.9034 75.342 42.5625 68.5937 42.5625ZM64.0117 54.4918C64.0117 52.0212 66.0632 50.0183 68.5937 50.0183C71.1243 50.0183 73.1758 52.0212 73.1758 54.4918C73.1758 56.9624 71.1243 58.9653 68.5937 58.9653C66.0632 58.9653 64.0117 56.9624 64.0117 54.4918Z"
          fill="url(#paint1_linear_445_24587)"
        />
      </g>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M69.1675 80.4414H26.6675C22.715 80.4414 19.4956 77.222 19.4956 73.2695C19.4956 69.317 22.715 66.0977 26.6675 66.0977H43.6675C44.0181 66.0977 44.3581 65.9595 44.6025 65.7045C44.8469 65.4602 44.9956 65.1095 44.9956 64.7695C44.9956 64.0364 44.4006 63.4414 43.6675 63.4414H39.4175C35.465 63.4414 32.2456 60.222 32.2456 56.2695V52.0195C32.2456 50.4045 33.5525 49.0977 35.1675 49.0977C36.7825 49.0977 38.0894 50.4045 38.0894 52.0195V56.3545C38.0894 56.6839 38.2169 57.0027 38.4612 57.2364C38.695 57.4702 39.0137 57.5977 39.3431 57.5977H43.6781C47.6306 57.5977 50.85 60.817 50.85 64.7695C50.85 68.722 47.6306 71.9414 43.6781 71.9414H26.6675C26.3169 71.9414 25.9769 72.0795 25.7325 72.3345C25.4881 72.5789 25.3394 72.9295 25.3394 73.2695C25.3394 74.0027 25.9344 74.5977 26.6675 74.5977H69.1675C70.7825 74.5977 72.0894 75.9045 72.0894 77.5195C72.0894 79.1345 70.7825 80.4414 69.1675 80.4414Z"
        fill="#2B068E"
      />
      <path
        d="M65.9801 78.3155H64.3863C63.9507 78.3155 63.5895 77.9542 63.5895 77.5186C63.5895 77.083 63.9507 76.7217 64.3863 76.7217H65.9801C66.4157 76.7217 66.777 77.083 66.777 77.5186C66.777 77.9542 66.4157 78.3155 65.9801 78.3155ZM59.6051 78.3155H58.0113C57.5757 78.3155 57.2145 77.9542 57.2145 77.5186C57.2145 77.083 57.5757 76.7217 58.0113 76.7217H59.6051C60.0407 76.7217 60.402 77.083 60.402 77.5186C60.402 77.9542 60.0407 78.3155 59.6051 78.3155ZM53.2301 78.3155H51.6363C51.2007 78.3155 50.8395 77.9542 50.8395 77.5186C50.8395 77.083 51.2007 76.7217 51.6363 76.7217H53.2301C53.6657 76.7217 54.027 77.083 54.027 77.5186C54.027 77.9542 53.6657 78.3155 53.2301 78.3155ZM46.8551 78.3155H45.2613C44.8257 78.3155 44.4645 77.9542 44.4645 77.5186C44.4645 77.083 44.8257 76.7217 45.2613 76.7217H46.8551C47.2907 76.7217 47.652 77.083 47.652 77.5186C47.652 77.9542 47.2907 78.3155 46.8551 78.3155ZM40.4801 78.3155H38.8863C38.4507 78.3155 38.0895 77.9542 38.0895 77.5186C38.0895 77.083 38.4507 76.7217 38.8863 76.7217H40.4801C40.9157 76.7217 41.277 77.083 41.277 77.5186C41.277 77.9542 40.9157 78.3155 40.4801 78.3155ZM34.1051 78.3155H32.5113C32.0757 78.3155 31.7145 77.9542 31.7145 77.5186C31.7145 77.083 32.0757 76.7217 32.5113 76.7217H34.1051C34.5407 76.7217 34.902 77.083 34.902 77.5186C34.902 77.9542 34.5407 78.3155 34.1051 78.3155ZM27.7301 78.3155H26.6676C26.4551 78.3155 26.2426 78.3048 26.0407 78.273C25.831 78.2457 25.6407 78.1365 25.5112 77.9692C25.3818 77.802 25.3239 77.5903 25.3501 77.3805C25.4032 76.9448 25.807 76.6261 26.2426 76.6898C26.3807 76.7111 26.5295 76.7217 26.6782 76.7217H27.7407C28.1763 76.7217 28.5376 77.083 28.5376 77.5186C28.5376 77.9542 28.1763 78.3155 27.7407 78.3155M22.6407 75.4042C22.4741 75.4041 22.3117 75.3518 22.1764 75.2546C22.0411 75.1574 21.9397 75.0202 21.8863 74.8623C21.7163 74.3417 21.6313 73.8105 21.6313 73.2686V73.003C21.6426 72.7916 21.7374 72.5934 21.8948 72.4519C22.0522 72.3105 22.2594 72.2373 22.4707 72.2486C22.6821 72.2599 22.8803 72.3546 23.0218 72.512C23.1632 72.6695 23.2364 72.8766 23.2251 73.088V73.2686C23.2251 73.6405 23.2782 74.0017 23.3951 74.363C23.4283 74.4627 23.4414 74.568 23.4337 74.6729C23.426 74.7777 23.3976 74.88 23.3502 74.9738C23.3028 75.0676 23.2373 75.1511 23.1575 75.2195C23.0776 75.2879 22.9851 75.3399 22.8851 75.3723C22.8001 75.4042 22.7151 75.4148 22.6301 75.4148M25.042 70.1448C24.7338 70.1448 24.4257 69.9642 24.3088 69.6561C24.1388 69.2523 24.3301 68.7848 24.7445 68.6148C25.3288 68.3705 25.9557 68.243 26.5826 68.2323H26.5932C26.8046 68.2309 27.0078 68.3135 27.1583 68.462C27.3087 68.6104 27.394 68.8126 27.3954 69.0239C27.3968 69.2352 27.3142 69.4385 27.1658 69.5889C27.0173 69.7394 26.8152 69.8247 26.6038 69.8261C26.1682 69.8261 25.7432 69.9217 25.3395 70.0917C25.2438 70.1342 25.1376 70.1555 25.0313 70.1555M39.3432 69.8367H37.7495C37.3138 69.8367 36.9526 69.4755 36.9526 69.0398C36.9526 68.6042 37.3138 68.243 37.7495 68.243H39.3432C39.7788 68.243 40.1401 68.6042 40.1401 69.0398C40.1401 69.4755 39.7788 69.8367 39.3432 69.8367ZM32.9682 69.8367H31.3745C31.1631 69.8367 30.9604 69.7528 30.811 69.6033C30.6616 69.4539 30.5776 69.2512 30.5776 69.0398C30.5776 68.8285 30.6616 68.6258 30.811 68.4764C30.9604 68.3269 31.1631 68.243 31.3745 68.243H32.9682C33.4038 68.243 33.7651 68.6042 33.7651 69.0398C33.7651 69.4755 33.4038 69.8367 32.9682 69.8367ZM44.1245 69.8048C43.9282 69.8057 43.7387 69.7332 43.5932 69.6014C43.4477 69.4697 43.3568 69.2884 43.3382 69.093C43.2851 68.6573 43.6038 68.2642 44.0395 68.2111C44.4751 68.158 44.8895 68.0305 45.272 67.8286C45.6651 67.6267 46.1432 67.7755 46.3451 68.1686C46.547 68.5617 46.3982 69.0398 46.0051 69.2417C45.442 69.5392 44.8363 69.7198 44.2095 69.7942H44.1245M47.907 65.4061C47.482 65.4061 47.1313 65.0661 47.1101 64.6411C47.0888 64.2055 46.9932 63.7805 46.8232 63.3873C46.6426 62.9836 46.8232 62.5161 47.227 62.3355C47.6307 62.1548 48.0982 62.3355 48.2788 62.7392C48.5338 63.3236 48.6826 63.9398 48.7038 64.5667C48.7251 65.0023 48.3745 65.3742 47.9388 65.3955H47.907M43.7951 61.3155H42.2013C41.7657 61.3155 41.4045 60.9542 41.4045 60.5186C41.4045 60.083 41.7657 59.7217 42.2013 59.7217H43.8163C44.252 59.7323 44.6026 60.1042 44.592 60.5398C44.5813 60.9755 44.2307 61.3155 43.7951 61.3155ZM37.4945 60.8586C37.3776 60.8586 37.2501 60.8267 37.1332 60.7736C36.6551 60.5292 36.2195 60.2211 35.8476 59.8386C35.7732 59.7642 35.7095 59.6898 35.6457 59.6261C35.5078 59.4662 35.4383 59.2585 35.4522 59.0477C35.4661 58.837 35.5623 58.6402 35.7201 58.4998C36.0495 58.213 36.5488 58.2448 36.8463 58.5742C36.8888 58.6273 36.9313 58.6698 36.9845 58.723C37.2395 58.978 37.537 59.2011 37.8663 59.3605C38.0268 59.4412 38.1553 59.5737 38.231 59.7366C38.3066 59.8995 38.325 60.0832 38.2832 60.2579C38.2414 60.4326 38.1418 60.588 38.0005 60.699C37.8593 60.8099 37.6847 60.8699 37.5051 60.8692M35.1782 55.3867C34.7426 55.3867 34.3813 55.0255 34.3813 54.5898V52.9961C34.3813 52.5605 34.7426 52.1992 35.1782 52.1992C35.6138 52.1992 35.9751 52.5605 35.9751 52.9961V54.5898C35.9751 55.0255 35.6138 55.3867 35.1782 55.3867Z"
        fill="#F2F2F2"
      />
      <defs>
        <filter
          id="filter0_i_445_24587"
          x="23"
          y="16"
          width="24.4399"
          height="32.2871"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.8125" />
          <feGaussianBlur stdDeviation="0.90625" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.31 0"
          />
          <feBlend
            mode="normal"
            in2="shape"
            result="effect1_innerShadow_445_24587"
          />
        </filter>
        <filter
          id="filter1_i_445_24587"
          x="56.375"
          y="42.5625"
          width="24.4375"
          height="31.5625"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.8125" />
          <feGaussianBlur stdDeviation="0.90625" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.31 0"
          />
          <feBlend
            mode="normal"
            in2="shape"
            result="effect1_innerShadow_445_24587"
          />
        </filter>
        <linearGradient
          id="paint0_linear_445_24587"
          x1="35"
          y1="33.5"
          x2="35"
          y2="11"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0.18123" stop-color="#FF8501" />
          <stop offset="1" stop-color="#FFF4E5" />
        </linearGradient>
        <linearGradient
          id="paint1_linear_445_24587"
          x1="68.5937"
          y1="72.3858"
          x2="68.5937"
          y2="37.3434"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0.114401" stop-color="#E31C1C" />
          <stop offset="1" stop-color="#EE7777" stop-opacity="0.5" />
        </linearGradient>
      </defs>
    </svg>
  );
};

export const PackageTracking: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="70"
      height="73"
      className={ClassName}
      viewBox="0 0 70 73"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g filter="url(#filter0_d_448_24593)">
        <g filter="url(#filter1_i_448_24593)">
          <path
            d="M35.0425 3.34668H5.29248C4.85238 3.34668 4.49561 3.70345 4.49561 4.14355V29.6436C4.49561 30.0837 4.85238 30.4404 5.29248 30.4404H35.0425C35.4826 30.4404 35.8394 30.0837 35.8394 29.6436V4.14355C35.8394 3.70345 35.4826 3.34668 35.0425 3.34668Z"
            fill="url(#paint0_linear_448_24593)"
          />
        </g>
        <g filter="url(#filter2_i_448_24593)">
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M24.4175 15.5654C24.3006 15.5654 24.1731 15.5336 24.0562 15.4804L20.1675 13.5361L16.2681 15.4804C16.0237 15.6079 15.7262 15.5867 15.4925 15.4486C15.3781 15.3759 15.284 15.2754 15.219 15.1564C15.1539 15.0375 15.1201 14.9041 15.1206 14.7686V4.14355C15.1206 3.70793 15.4819 3.34668 15.9175 3.34668H24.4175C24.8531 3.34668 25.2144 3.70793 25.2144 4.14355V14.7686C25.2144 15.0448 25.0656 15.2998 24.8319 15.4486C24.7044 15.5229 24.5556 15.5654 24.4175 15.5654Z"
            fill="white"
          />
        </g>
        <g filter="url(#filter3_i_448_24593)">
          <path
            d="M30.7925 24.0654H24.4175C23.9819 24.0654 23.6206 23.7042 23.6206 23.2686C23.6206 22.8329 23.9819 22.4717 24.4175 22.4717H30.7925C31.2281 22.4717 31.5894 22.8329 31.5894 23.2686C31.5894 23.7042 31.2281 24.0654 30.7925 24.0654ZM30.7925 26.1904H26.5425C26.1069 26.1904 25.7456 25.8292 25.7456 25.3936C25.7456 24.9579 26.1069 24.5967 26.5425 24.5967H30.7925C31.2281 24.5967 31.5894 24.9579 31.5894 25.3936C31.5894 25.8292 31.2281 26.1904 30.7925 26.1904Z"
            fill="#E73F3F"
          />
        </g>
        <g filter="url(#filter4_i_448_24593)">
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M53.5938 26.5625C46.8455 26.5625 41.375 31.9034 41.375 38.4918C41.375 39.822 41.7882 41.2678 42.3699 42.6727C42.9596 44.0971 43.7674 45.585 44.6552 47.0286C46.4309 49.916 48.595 52.7365 50.1791 54.6873C51.9388 56.8542 55.2487 56.8542 57.0084 54.6873C58.5925 52.7365 60.7566 49.916 62.5323 47.0286C63.4201 45.585 64.2279 44.0971 64.8176 42.6727C65.3993 41.2678 65.8125 39.822 65.8125 38.4918C65.8125 31.9034 60.342 26.5625 53.5938 26.5625ZM49.0117 38.4918C49.0117 36.0212 51.0632 34.0183 53.5938 34.0183C56.1243 34.0183 58.1758 36.0212 58.1758 38.4918C58.1758 40.9624 56.1243 42.9653 53.5938 42.9653C51.0632 42.9653 49.0117 40.9624 49.0117 38.4918Z"
            fill="url(#paint1_linear_448_24593)"
          />
        </g>
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M54.1675 64.4404H11.6675C7.71498 64.4404 4.49561 61.2211 4.49561 57.2686C4.49561 53.3161 7.71498 50.0967 11.6675 50.0967H28.6675C29.0181 50.0967 29.3581 49.9586 29.6025 49.7036C29.8469 49.4592 29.9956 49.1086 29.9956 48.7686C29.9956 48.0354 29.4006 47.4404 28.6675 47.4404H24.4175C20.465 47.4404 17.2456 44.2211 17.2456 40.2686V36.0186C17.2456 34.4036 18.5525 33.0967 20.1675 33.0967C21.7825 33.0967 23.0894 34.4036 23.0894 36.0186V40.3536C23.0894 40.6829 23.2169 41.0017 23.4612 41.2354C23.695 41.4692 24.0137 41.5967 24.3431 41.5967H28.6781C32.6306 41.5967 35.85 44.8161 35.85 48.7686C35.85 52.7211 32.6306 55.9404 28.6781 55.9404H11.6675C11.3169 55.9404 10.9769 56.0786 10.7325 56.3336C10.4881 56.5779 10.3394 56.9286 10.3394 57.2686C10.3394 58.0017 10.9344 58.5967 11.6675 58.5967H54.1675C55.7825 58.5967 57.0894 59.9036 57.0894 61.5186C57.0894 63.1336 55.7825 64.4404 54.1675 64.4404Z"
          fill="#2B068E"
        />
        <path
          d="M50.9801 62.3155H49.3863C48.9507 62.3155 48.5895 61.9542 48.5895 61.5186C48.5895 61.083 48.9507 60.7217 49.3863 60.7217H50.9801C51.4157 60.7217 51.777 61.083 51.777 61.5186C51.777 61.9542 51.4157 62.3155 50.9801 62.3155ZM44.6051 62.3155H43.0113C42.5757 62.3155 42.2145 61.9542 42.2145 61.5186C42.2145 61.083 42.5757 60.7217 43.0113 60.7217H44.6051C45.0407 60.7217 45.402 61.083 45.402 61.5186C45.402 61.9542 45.0407 62.3155 44.6051 62.3155ZM38.2301 62.3155H36.6363C36.2007 62.3155 35.8395 61.9542 35.8395 61.5186C35.8395 61.083 36.2007 60.7217 36.6363 60.7217H38.2301C38.6657 60.7217 39.027 61.083 39.027 61.5186C39.027 61.9542 38.6657 62.3155 38.2301 62.3155ZM31.8551 62.3155H30.2613C29.8257 62.3155 29.4645 61.9542 29.4645 61.5186C29.4645 61.083 29.8257 60.7217 30.2613 60.7217H31.8551C32.2907 60.7217 32.652 61.083 32.652 61.5186C32.652 61.9542 32.2907 62.3155 31.8551 62.3155ZM25.4801 62.3155H23.8863C23.4507 62.3155 23.0895 61.9542 23.0895 61.5186C23.0895 61.083 23.4507 60.7217 23.8863 60.7217H25.4801C25.9157 60.7217 26.277 61.083 26.277 61.5186C26.277 61.9542 25.9157 62.3155 25.4801 62.3155ZM19.1051 62.3155H17.5113C17.0757 62.3155 16.7145 61.9542 16.7145 61.5186C16.7145 61.083 17.0757 60.7217 17.5113 60.7217H19.1051C19.5407 60.7217 19.902 61.083 19.902 61.5186C19.902 61.9542 19.5407 62.3155 19.1051 62.3155ZM12.7301 62.3155H11.6676C11.4551 62.3155 11.2426 62.3048 11.0407 62.273C10.831 62.2457 10.6407 62.1365 10.5112 61.9692C10.3818 61.802 10.3239 61.5903 10.3501 61.3805C10.4032 60.9448 10.807 60.6261 11.2426 60.6898C11.3807 60.7111 11.5295 60.7217 11.6782 60.7217H12.7407C13.1763 60.7217 13.5376 61.083 13.5376 61.5186C13.5376 61.9542 13.1763 62.3155 12.7407 62.3155M7.64072 59.4042C7.47412 59.4041 7.31174 59.3518 7.17642 59.2546C7.04111 59.1574 6.93966 59.0202 6.88635 58.8623C6.71635 58.3417 6.63135 57.8105 6.63135 57.2686V57.003C6.64262 56.7916 6.73739 56.5934 6.8948 56.4519C7.05221 56.3105 7.25938 56.2373 7.47072 56.2486C7.68207 56.2599 7.88028 56.3546 8.02175 56.512C8.16322 56.6695 8.23637 56.8766 8.2251 57.088V57.2686C8.2251 57.6405 8.27822 58.0017 8.3951 58.363C8.42827 58.4627 8.44138 58.568 8.43367 58.6729C8.42596 58.7777 8.39759 58.88 8.35018 58.9738C8.30278 59.0676 8.23728 59.1511 8.15746 59.2195C8.07764 59.2879 7.98507 59.3399 7.8851 59.3723C7.8001 59.4042 7.7151 59.4148 7.6301 59.4148M10.042 54.1448C9.73385 54.1448 9.42572 53.9642 9.30885 53.6561C9.13885 53.2523 9.3301 52.7848 9.74447 52.6148C10.3288 52.3705 10.9557 52.243 11.5826 52.2323H11.5932C11.8046 52.2309 12.0078 52.3135 12.1583 52.462C12.3087 52.6104 12.394 52.8126 12.3954 53.0239C12.3968 53.2353 12.3142 53.4385 12.1658 53.5889C12.0173 53.7394 11.8152 53.8247 11.6038 53.8261C11.1682 53.8261 10.7432 53.9217 10.3395 54.0917C10.2438 54.1342 10.1376 54.1555 10.0313 54.1555M24.3432 53.8367H22.7495C22.3138 53.8367 21.9526 53.4755 21.9526 53.0398C21.9526 52.6042 22.3138 52.243 22.7495 52.243H24.3432C24.7788 52.243 25.1401 52.6042 25.1401 53.0398C25.1401 53.4755 24.7788 53.8367 24.3432 53.8367ZM17.9682 53.8367H16.3745C16.1631 53.8367 15.9604 53.7528 15.811 53.6033C15.6616 53.4539 15.5776 53.2512 15.5776 53.0398C15.5776 52.8285 15.6616 52.6258 15.811 52.4764C15.9604 52.3269 16.1631 52.243 16.3745 52.243H17.9682C18.4038 52.243 18.7651 52.6042 18.7651 53.0398C18.7651 53.4755 18.4038 53.8367 17.9682 53.8367ZM29.1245 53.8048C28.9282 53.8057 28.7387 53.7332 28.5932 53.6014C28.4478 53.4697 28.3568 53.2884 28.3382 53.093C28.2851 52.6573 28.6038 52.2642 29.0395 52.2111C29.4751 52.158 29.8895 52.0305 30.272 51.8286C30.6651 51.6267 31.1432 51.7755 31.3451 52.1686C31.547 52.5617 31.3982 53.0398 31.0051 53.2417C30.442 53.5392 29.8363 53.7198 29.2095 53.7942H29.1245M32.907 49.4061C32.482 49.4061 32.1313 49.0661 32.1101 48.6411C32.0888 48.2055 31.9932 47.7805 31.8232 47.3873C31.6426 46.9836 31.8232 46.5161 32.227 46.3355C32.6307 46.1548 33.0982 46.3355 33.2788 46.7392C33.5338 47.3236 33.6826 47.9398 33.7038 48.5667C33.7251 49.0023 33.3745 49.3742 32.9388 49.3955H32.907M28.7951 45.3155H27.2013C26.7657 45.3155 26.4045 44.9542 26.4045 44.5186C26.4045 44.083 26.7657 43.7217 27.2013 43.7217H28.8163C29.252 43.7323 29.6026 44.1042 29.592 44.5398C29.5813 44.9755 29.2307 45.3155 28.7951 45.3155ZM22.4945 44.8586C22.3776 44.8586 22.2501 44.8267 22.1332 44.7736C21.6551 44.5292 21.2195 44.2211 20.8476 43.8386C20.7732 43.7642 20.7095 43.6898 20.6457 43.6261C20.5078 43.4662 20.4383 43.2585 20.4522 43.0477C20.4661 42.837 20.5623 42.6402 20.7201 42.4998C21.0495 42.213 21.5488 42.2448 21.8463 42.5742C21.8888 42.6273 21.9313 42.6698 21.9845 42.723C22.2395 42.978 22.537 43.2011 22.8663 43.3605C23.0268 43.4412 23.1553 43.5737 23.231 43.7366C23.3066 43.8995 23.325 44.0832 23.2832 44.2579C23.2414 44.4326 23.1418 44.588 23.0005 44.699C22.8593 44.8099 22.6847 44.8699 22.5051 44.8692M20.1782 39.3867C19.7426 39.3867 19.3813 39.0255 19.3813 38.5898V36.9961C19.3813 36.5605 19.7426 36.1992 20.1782 36.1992C20.6138 36.1992 20.9751 36.5605 20.9751 36.9961V38.5898C20.9751 39.0255 20.6138 39.3867 20.1782 39.3867Z"
          fill="#F2F2F2"
        />
      </g>
      <defs>
        <filter
          id="filter0_d_448_24593"
          x="-3"
          y="0"
          width="76"
          height="76"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="4" />
          <feGaussianBlur stdDeviation="2" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_448_24593"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow_448_24593"
            result="shape"
          />
        </filter>
        <filter
          id="filter1_i_448_24593"
          x="4.49561"
          y="3.34668"
          width="32.3438"
          height="28.0938"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dx="1" dy="1" />
          <feGaussianBlur stdDeviation="0.5" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.13 0"
          />
          <feBlend
            mode="normal"
            in2="shape"
            result="effect1_innerShadow_448_24593"
          />
        </filter>
        <filter
          id="filter2_i_448_24593"
          x="15.1206"
          y="2.34668"
          width="10.0938"
          height="13.2188"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="-1" />
          <feGaussianBlur stdDeviation="0.5" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"
          />
          <feBlend
            mode="normal"
            in2="shape"
            result="effect1_innerShadow_448_24593"
          />
        </filter>
        <filter
          id="filter3_i_448_24593"
          x="23.6206"
          y="22.4717"
          width="7.96875"
          height="4.71875"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1" />
          <feGaussianBlur stdDeviation="0.5" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.26 0"
          />
          <feBlend
            mode="normal"
            in2="shape"
            result="effect1_innerShadow_448_24593"
          />
        </filter>
        <filter
          id="filter4_i_448_24593"
          x="41.375"
          y="26.5625"
          width="24.4375"
          height="31.5625"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1.8125" />
          <feGaussianBlur stdDeviation="0.90625" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.31 0"
          />
          <feBlend
            mode="normal"
            in2="shape"
            result="effect1_innerShadow_448_24593"
          />
        </filter>
        <linearGradient
          id="paint0_linear_448_24593"
          x1="16.5"
          y1="14.9998"
          x2="11"
          y2="40.4998"
          gradientUnits="userSpaceOnUse"
        >
          <stop stop-color="#FF8501" />
          <stop offset="0.851005" stop-color="#FF8501" stop-opacity="0.06" />
        </linearGradient>
        <linearGradient
          id="paint1_linear_448_24593"
          x1="53.5937"
          y1="56.3858"
          x2="53.5937"
          y2="21.3434"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0.114401" stop-color="#E31C1C" />
          <stop offset="1" stop-color="#EE7777" stop-opacity="0.5" />
        </linearGradient>
      </defs>
    </svg>
  );
};
export const HomeIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    className={ClassName}
    stroke={stroke}
    width="42"
    height="34"
    viewBox="0 0 42 34"
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M2.415 12.849H39.585C40.9172 12.849 42 11.7788 42 10.4621C42 9.98858 41.8556 9.52807 41.5931 9.13889L36.6319 1.78355C36.0478 0.914403 35.07 0.395508 34.0134 0.395508H7.98656C6.93656 0.395508 5.95219 0.914403 5.36812 1.78355L0.406875 9.13241C0.144375 9.52807 0 9.98859 0 10.4556C0 11.7788 1.08281 12.849 2.415 12.849ZM4.2 14.9246V25.3025V30.4914C4.2 32.2103 5.61094 33.6048 7.35 33.6048H22.05C23.7891 33.6048 25.2 32.2103 25.2 30.4914V25.3025V14.9246H21V25.3025H8.4V14.9246H4.2ZM33.6 14.9246V31.5292C33.6 32.6773 34.5384 33.6048 35.7 33.6048C36.8616 33.6048 37.8 32.6773 37.8 31.5292V14.9246H33.6Z"
      fill="#FF8501"
    />
  </svg>
);
export const DateIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="16"
    height="16"
    viewBox="0 0 16 16"
    fill={fill}
    stroke={stroke}
    className={ClassName}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M5.6 0C6.04183 0 6.4 0.358172 6.4 0.8V1.6H9.6V0.8C9.6 0.358172 9.95817 0 10.4 0C10.8418 0 11.2 0.358172 11.2 0.8V1.6H12.8C14.5673 1.6 16 3.03269 16 4.8V12.8C16 14.5673 14.5673 16 12.8 16H3.2C1.43269 16 0 14.5673 0 12.8V4.8C0 3.03269 1.43269 1.6 3.2 1.6H4.8V0.8C4.8 0.358172 5.15817 0 5.6 0ZM4.8 3.2H3.2C2.31634 3.2 1.6 3.91634 1.6 4.8V6.4H14.4V4.8C14.4 3.91634 13.6837 3.2 12.8 3.2H11.2V4.8C11.2 5.24183 10.8418 5.6 10.4 5.6C9.95817 5.6 9.6 5.24183 9.6 4.8V3.2H6.4V4.8C6.4 5.24183 6.04183 5.6 5.6 5.6C5.15817 5.6 4.8 5.24183 4.8 4.8V3.2ZM14.4 8H1.6V12.8C1.6 13.6837 2.31634 14.4 3.2 14.4H12.8C13.6837 14.4 14.4 13.6837 14.4 12.8V8Z"
      fill={fill}
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M3.2 10.4C3.2 9.95817 3.55817 9.6 4 9.6H6.4C6.84183 9.6 7.2 9.95817 7.2 10.4V12C7.2 12.4418 6.84183 12.8 6.4 12.8H4C3.55817 12.8 3.2 12.4418 3.2 12V10.4Z"
      fill={fill}
    />
  </svg>
);
export const SignalIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="18"
    height="16"
    viewBox="0 0 18 16"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M4.73764 15.5094C4.54701 15.7414 4.28139 15.875 4.00014 15.875C3.71889 15.875 3.45326 15.7414 3.26264 15.5094L0.512637 12.1344C0.140762 11.6773 0.165762 10.9637 0.575137 10.5453C0.984512 10.127 1.61576 10.1551 1.98764 10.6156L3.00014 11.8566V1.25C3.00014 0.627734 3.44701 0.125 4.00014 0.125C4.55326 0.125 5.00014 0.627734 5.00014 1.25V11.8566L6.01264 10.6121C6.38451 10.1551 7.01889 10.1234 7.42514 10.5418C7.83139 10.9602 7.85951 11.6738 7.48764 12.1309L4.73764 15.5059V15.5094ZM10.0001 0.125H11.0001C11.5533 0.125 12.0001 0.627734 12.0001 1.25C12.0001 1.87227 11.5533 2.375 11.0001 2.375H10.0001C9.44701 2.375 9.00014 1.87227 9.00014 1.25C9.00014 0.627734 9.44701 0.125 10.0001 0.125ZM10.0001 4.625H13.0001C13.5533 4.625 14.0001 5.12773 14.0001 5.75C14.0001 6.37227 13.5533 6.875 13.0001 6.875H10.0001C9.44701 6.875 9.00014 6.37227 9.00014 5.75C9.00014 5.12773 9.44701 4.625 10.0001 4.625ZM10.0001 9.125H15.0001C15.5533 9.125 16.0001 9.62773 16.0001 10.25C16.0001 10.8723 15.5533 11.375 15.0001 11.375H10.0001C9.44701 11.375 9.00014 10.8723 9.00014 10.25C9.00014 9.62773 9.44701 9.125 10.0001 9.125ZM10.0001 13.625H17.0001C17.5533 13.625 18.0001 14.1277 18.0001 14.75C18.0001 15.3723 17.5533 15.875 17.0001 15.875H10.0001C9.44701 15.875 9.00014 15.3723 9.00014 14.75C9.00014 14.1277 9.44701 13.625 10.0001 13.625Z"
      fill="#240046"
    />
  </svg>
);
export const AwardIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="16"
    height="18"
    viewBox="0 0 16 18"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M6.99219 4.93878L4.83187 1.2031C4.74304 1.04943 4.61737 0.922243 4.4671 0.833939C4.31682 0.745635 4.14706 0.699221 3.97436 0.699219H0.500916C0.0962277 0.699219 -0.140648 1.17165 0.0912277 1.51568L3.56843 6.66994C4.49718 5.7695 5.67843 5.15148 6.99219 4.93878ZM15.4991 0.699219H12.0256C11.6744 0.699219 11.3488 0.890526 11.1681 1.2031L9.00782 4.93878C10.3216 5.15148 11.5028 5.7695 12.4316 6.66962L15.9088 1.51568C16.1406 1.17165 15.9038 0.699219 15.4991 0.699219ZM8 5.8872C4.96249 5.8872 2.49998 8.44229 2.49998 11.594C2.49998 14.7457 4.96249 17.3008 8 17.3008C11.0375 17.3008 13.5 14.7457 13.5 11.594C13.5 8.44229 11.0375 5.8872 8 5.8872ZM10.8913 10.9863L9.70594 12.1848L9.98626 13.878C10.0363 14.1815 9.72813 14.4133 9.46594 14.27L8 13.4707L6.53437 14.27C6.27187 14.4143 5.96406 14.1812 6.01406 13.878L6.29437 12.1848L5.10906 10.9863C4.89593 10.771 5.01374 10.3952 5.30749 10.3511L6.94594 10.1034L7.67812 8.56258C7.74406 8.4238 7.87156 8.35539 7.99938 8.35539C8.12781 8.35539 8.25625 8.42478 8.32219 8.56258L9.05438 10.1034L10.6928 10.3511C10.9866 10.3952 11.1044 10.771 10.8913 10.9863Z"
      fill="#240046"
    />
  </svg>
);
export const LongArrowRight: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="119"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    height="8"
    viewBox="0 0 119 8"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M118.354 4.35355C118.549 4.15829 118.549 3.84171 118.354 3.64645L115.172 0.464466C114.976 0.269204 114.66 0.269204 114.464 0.464466C114.269 0.659728 114.269 0.976311 114.464 1.17157L117.293 4L114.464 6.82843C114.269 7.02369 114.269 7.34027 114.464 7.53553C114.66 7.7308 114.976 7.7308 115.172 7.53553L118.354 4.35355ZM0 4.5H118V3.5H0V4.5Z"
      fill="#FF8501"
    />
  </svg>
);

export const VerifiedIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      fill={fill}
      className={ClassName}
      stroke={stroke}
      width="122"
      height="29"
      viewBox="0 0 122 29"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M0 2C0 0.89543 0.89543 0 2 0H122V23H0V2Z" fill="#1164EE" />
      <path
        d="M11.9922 6.43878L9.83187 2.7031C9.74304 2.54943 9.61737 2.42224 9.4671 2.33394C9.31682 2.24563 9.14706 2.19922 8.97436 2.19922H5.50092C5.09623 2.19922 4.85935 2.67165 5.09123 3.01568L8.56843 8.16994C9.49718 7.2695 10.6784 6.65148 11.9922 6.43878ZM20.4991 2.19922H17.0256C16.6744 2.19922 16.3488 2.39053 16.1681 2.7031L14.0078 6.43878C15.3216 6.65148 16.5028 7.2695 17.4316 8.16962L20.9088 3.01568C21.1406 2.67165 20.9038 2.19922 20.4991 2.19922ZM13 7.3872C9.96249 7.3872 7.49998 9.94229 7.49998 13.094C7.49998 16.2457 9.96249 18.8008 13 18.8008C16.0375 18.8008 18.5 16.2457 18.5 13.094C18.5 9.94229 16.0375 7.3872 13 7.3872ZM15.8913 12.4863L14.7059 13.6848L14.9863 15.378C15.0363 15.6815 14.7281 15.9133 14.4659 15.77L13 14.9707L11.5344 15.77C11.2719 15.9143 10.9641 15.6812 11.0141 15.378L11.2944 13.6848L10.1091 12.4863C9.89593 12.271 10.0137 11.8952 10.3075 11.8511L11.9459 11.6034L12.6781 10.0626C12.7441 9.9238 12.8716 9.85539 12.9994 9.85539C13.1278 9.85539 13.2563 9.92478 13.3222 10.0626L14.0544 11.6034L15.6928 11.8511C15.9866 11.8952 16.1044 12.271 15.8913 12.4863Z"
        fill="white"
      />
      <path
        d="M29.5737 6.86133L27.147 14H25.4966L23.0747 6.86133H24.603L25.9458 11.1094C25.9686 11.181 26.006 11.3161 26.0581 11.5146C26.1102 11.71 26.1623 11.9183 26.2143 12.1396C26.2697 12.3577 26.3071 12.5384 26.3266 12.6816C26.3462 12.5384 26.3804 12.3577 26.4292 12.1396C26.4813 11.9215 26.5317 11.7148 26.5805 11.5195C26.6326 11.321 26.6701 11.1842 26.6929 11.1094L28.0454 6.86133H29.5737ZM32.4908 8.43848C32.9954 8.43848 33.4299 8.53613 33.7945 8.73145C34.1591 8.9235 34.4407 9.20345 34.6393 9.57129C34.8378 9.93913 34.9371 10.3883 34.9371 10.9189V11.6416H31.4166C31.4329 12.0615 31.5582 12.3919 31.7926 12.6328C32.0302 12.8704 32.359 12.9893 32.7789 12.9893C33.1272 12.9893 33.4462 12.9535 33.7359 12.8818C34.0257 12.8102 34.3235 12.7028 34.6295 12.5596V13.7119C34.3593 13.8454 34.0761 13.943 33.7799 14.0049C33.4869 14.0667 33.1305 14.0977 32.7105 14.0977C32.1637 14.0977 31.6786 13.9967 31.2555 13.7949C30.8355 13.5931 30.5051 13.2855 30.2643 12.8721C30.0266 12.4587 29.9078 11.9378 29.9078 11.3096C29.9078 10.6715 30.0152 10.141 30.2301 9.71777C30.4482 9.29134 30.7509 8.97233 31.1383 8.76074C31.5257 8.5459 31.9765 8.43848 32.4908 8.43848ZM32.5006 9.49805C32.2109 9.49805 31.97 9.59082 31.7779 9.77637C31.5891 9.96191 31.4801 10.2533 31.4508 10.6504H33.5406C33.5374 10.429 33.4967 10.2321 33.4186 10.0596C33.3437 9.88704 33.2298 9.75033 33.0768 9.64941C32.927 9.5485 32.735 9.49805 32.5006 9.49805ZM34.3365 6.33887V6.44141C34.2421 6.53255 34.1184 6.64486 33.9654 6.77832C33.8124 6.91178 33.648 7.05176 33.4723 7.19824C33.2965 7.34147 33.124 7.47982 32.9547 7.61328C32.7854 7.74349 32.6373 7.85254 32.5104 7.94043H31.5191V7.80859C31.6266 7.6849 31.7503 7.53841 31.8902 7.36914C32.0335 7.19661 32.1751 7.01921 32.315 6.83691C32.455 6.65462 32.5722 6.48861 32.6666 6.33887H34.3365ZM39.0749 8.43848C39.1498 8.43848 39.2361 8.44336 39.3337 8.45312C39.4346 8.45964 39.516 8.4694 39.5779 8.48242L39.4655 9.87891C39.4167 9.86263 39.3467 9.85124 39.2556 9.84473C39.1677 9.83496 39.0912 9.83008 39.0261 9.83008C38.834 9.83008 38.6469 9.85449 38.4646 9.90332C38.2855 9.95215 38.1244 10.0319 37.9812 10.1426C37.8379 10.25 37.724 10.3932 37.6394 10.5723C37.558 10.748 37.5173 10.9645 37.5173 11.2217V14H36.028V8.54102H37.156L37.3757 9.45898H37.4489C37.5564 9.27344 37.6898 9.10417 37.8493 8.95117C38.0121 8.79492 38.196 8.67122 38.4011 8.58008C38.6094 8.48568 38.834 8.43848 39.0749 8.43848ZM41.9383 8.54102V14H40.4491V8.54102H41.9383ZM41.1961 6.40234C41.4175 6.40234 41.6079 6.45443 41.7674 6.55859C41.9269 6.65951 42.0067 6.84993 42.0067 7.12988C42.0067 7.40658 41.9269 7.59863 41.7674 7.70605C41.6079 7.81022 41.4175 7.8623 41.1961 7.8623C40.9715 7.8623 40.7795 7.81022 40.62 7.70605C40.4637 7.59863 40.3856 7.40658 40.3856 7.12988C40.3856 6.84993 40.4637 6.65951 40.62 6.55859C40.7795 6.45443 40.9715 6.40234 41.1961 6.40234ZM46.4033 9.65918H45.1142V14H43.625V9.65918H42.8046V8.94141L43.625 8.54102V8.14062C43.625 7.67513 43.7031 7.3138 43.8593 7.05664C44.0188 6.79622 44.2418 6.61393 44.5283 6.50977C44.818 6.40234 45.1598 6.34863 45.5537 6.34863C45.8434 6.34863 46.1071 6.37305 46.3447 6.42188C46.5823 6.46745 46.776 6.51953 46.9257 6.57812L46.5449 7.67188C46.431 7.63607 46.3073 7.60352 46.1738 7.57422C46.0403 7.54492 45.8873 7.53027 45.7148 7.53027C45.5065 7.53027 45.3535 7.59375 45.2558 7.7207C45.1614 7.8444 45.1142 8.00391 45.1142 8.19922V8.54102H46.4033V9.65918ZM48.747 8.54102V14H47.2578V8.54102H48.747ZM48.0048 6.40234C48.2262 6.40234 48.4166 6.45443 48.5761 6.55859C48.7356 6.65951 48.8154 6.84993 48.8154 7.12988C48.8154 7.40658 48.7356 7.59863 48.5761 7.70605C48.4166 7.81022 48.2262 7.8623 48.0048 7.8623C47.7802 7.8623 47.5882 7.81022 47.4287 7.70605C47.2724 7.59863 47.1943 7.40658 47.1943 7.12988C47.1943 6.84993 47.2724 6.65951 47.4287 6.55859C47.5882 6.45443 47.7802 6.40234 48.0048 6.40234ZM52.4405 8.43848C52.9451 8.43848 53.3796 8.53613 53.7442 8.73145C54.1088 8.9235 54.3904 9.20345 54.5889 9.57129C54.7875 9.93913 54.8868 10.3883 54.8868 10.9189V11.6416H51.3663C51.3826 12.0615 51.5079 12.3919 51.7423 12.6328C51.9799 12.8704 52.3087 12.9893 52.7286 12.9893C53.0769 12.9893 53.3959 12.9535 53.6856 12.8818C53.9753 12.8102 54.2732 12.7028 54.5792 12.5596V13.7119C54.309 13.8454 54.0258 13.943 53.7296 14.0049C53.4366 14.0667 53.0802 14.0977 52.6602 14.0977C52.1134 14.0977 51.6283 13.9967 51.2052 13.7949C50.7852 13.5931 50.4548 13.2855 50.2139 12.8721C49.9763 12.4587 49.8575 11.9378 49.8575 11.3096C49.8575 10.6715 49.9649 10.141 50.1798 9.71777C50.3979 9.29134 50.7006 8.97233 51.088 8.76074C51.4753 8.5459 51.9262 8.43848 52.4405 8.43848ZM52.4503 9.49805C52.1606 9.49805 51.9197 9.59082 51.7276 9.77637C51.5388 9.96191 51.4298 10.2533 51.4005 10.6504H53.4903C53.4871 10.429 53.4464 10.2321 53.3682 10.0596C53.2934 9.88704 53.1794 9.75033 53.0264 9.64941C52.8767 9.5485 52.6846 9.49805 52.4503 9.49805ZM54.2862 6.33887V6.44141C54.1918 6.53255 54.0681 6.64486 53.9151 6.77832C53.7621 6.91178 53.5977 7.05176 53.422 7.19824C53.2462 7.34147 53.0736 7.47982 52.9044 7.61328C52.7351 7.74349 52.587 7.85254 52.46 7.94043H51.4688V7.80859C51.5763 7.6849 51.6999 7.53841 51.8399 7.36914C51.9832 7.19661 52.1248 7.01921 52.2647 6.83691C52.4047 6.65462 52.5219 6.48861 52.6163 6.33887H54.2862ZM61.4925 8.43848C62.1077 8.43848 62.6042 8.67773 62.9818 9.15625C63.3626 9.63477 63.553 10.3363 63.553 11.2607C63.553 11.8792 63.4635 12.4001 63.2845 12.8232C63.1055 13.2432 62.8581 13.5605 62.5423 13.7754C62.2265 13.9902 61.8636 14.0977 61.4534 14.0977C61.1898 14.0977 60.9635 14.0651 60.7747 14C60.5859 13.9316 60.4248 13.8454 60.2913 13.7412C60.1579 13.6338 60.0423 13.5199 59.9446 13.3994H59.8665C59.8926 13.5296 59.9121 13.6631 59.9251 13.7998C59.9381 13.9365 59.9446 14.07 59.9446 14.2002V16.4023H58.4554V8.54102H59.6663L59.8763 9.24902H59.9446C60.0423 9.10254 60.1611 8.96745 60.3011 8.84375C60.4411 8.72005 60.6087 8.6224 60.804 8.55078C61.0026 8.47591 61.2321 8.43848 61.4925 8.43848ZM61.014 9.62988C60.7536 9.62988 60.5469 9.68359 60.3939 9.79102C60.2409 9.89844 60.1286 10.0596 60.057 10.2744C59.9886 10.4893 59.9512 10.7611 59.9446 11.0898V11.251C59.9446 11.6025 59.9772 11.9004 60.0423 12.1445C60.1107 12.3887 60.223 12.5742 60.3792 12.7012C60.5387 12.8281 60.7568 12.8916 61.0335 12.8916C61.2614 12.8916 61.4486 12.8281 61.595 12.7012C61.7415 12.5742 61.8506 12.3887 61.9222 12.1445C61.9971 11.8971 62.0345 11.596 62.0345 11.2412C62.0345 10.7074 61.9515 10.3053 61.7855 10.0352C61.6195 9.76497 61.3623 9.62988 61.014 9.62988ZM66.8998 8.42871C67.6323 8.42871 68.1938 8.58822 68.5844 8.90723C68.975 9.22624 69.1704 9.71126 69.1704 10.3623V14H68.1303L67.8422 13.2578H67.8032C67.6469 13.4531 67.4874 13.6126 67.3246 13.7363C67.1619 13.86 66.9747 13.9512 66.7631 14.0098C66.5515 14.0684 66.2944 14.0977 65.9916 14.0977C65.6694 14.0977 65.3797 14.0358 65.1225 13.9121C64.8686 13.7884 64.6684 13.5996 64.5219 13.3457C64.3754 13.0885 64.3022 12.763 64.3022 12.3691C64.3022 11.7897 64.5056 11.3633 64.9125 11.0898C65.3194 10.8132 65.9298 10.6602 66.7436 10.6309L67.6909 10.6016V10.3623C67.6909 10.0758 67.616 9.86589 67.4663 9.73242C67.3165 9.59896 67.1082 9.53223 66.8413 9.53223C66.5776 9.53223 66.3188 9.56966 66.0649 9.64453C65.811 9.7194 65.5571 9.8138 65.3032 9.92773L64.81 8.92188C65.0997 8.76888 65.4236 8.64844 65.7817 8.56055C66.143 8.47266 66.5157 8.42871 66.8998 8.42871ZM67.6909 11.4707L67.1147 11.4902C66.6329 11.5033 66.2976 11.5895 66.1088 11.749C65.9233 11.9085 65.8305 12.1185 65.8305 12.3789C65.8305 12.6068 65.8972 12.7695 66.0307 12.8672C66.1642 12.9616 66.3383 13.0088 66.5532 13.0088C66.8722 13.0088 67.1407 12.9144 67.3588 12.7256C67.5802 12.5368 67.6909 12.2682 67.6909 11.9199V11.4707ZM73.6353 8.43848C73.7102 8.43848 73.7964 8.44336 73.8941 8.45312C73.995 8.45964 74.0764 8.4694 74.1382 8.48242L74.0259 9.87891C73.9771 9.86263 73.9071 9.85124 73.816 9.84473C73.7281 9.83496 73.6516 9.83008 73.5865 9.83008C73.3944 9.83008 73.2073 9.85449 73.025 9.90332C72.8459 9.95215 72.6848 10.0319 72.5416 10.1426C72.3983 10.25 72.2844 10.3932 72.1998 10.5723C72.1184 10.748 72.0777 10.9645 72.0777 11.2217V14H70.5884V8.54102H71.7164L71.9361 9.45898H72.0093C72.1168 9.27344 72.2502 9.10417 72.4097 8.95117C72.5725 8.79492 72.7564 8.67122 72.9615 8.58008C73.1698 8.48568 73.3944 8.43848 73.6353 8.43848ZM79.0936 14H77.6043V6.86133H81.6961V8.10156H79.0936V9.94238H81.5154V11.1777H79.0936V14ZM84.3447 8.54102V14H82.8554V8.54102H84.3447ZM83.6025 6.40234C83.8238 6.40234 84.0142 6.45443 84.1738 6.55859C84.3333 6.65951 84.413 6.84993 84.413 7.12988C84.413 7.40658 84.3333 7.59863 84.1738 7.70605C84.0142 7.81022 83.8238 7.8623 83.6025 7.8623C83.3779 7.8623 83.1858 7.81022 83.0263 7.70605C82.87 7.59863 82.7919 7.40658 82.7919 7.12988C82.7919 6.84993 82.87 6.65951 83.0263 6.55859C83.1858 6.45443 83.3779 6.40234 83.6025 6.40234ZM88.0284 8.42871C88.7608 8.42871 89.3223 8.58822 89.7129 8.90723C90.1036 9.22624 90.2989 9.71126 90.2989 10.3623V14H89.2588L88.9707 13.2578H88.9317C88.7754 13.4531 88.6159 13.6126 88.4532 13.7363C88.2904 13.86 88.1032 13.9512 87.8916 14.0098C87.6801 14.0684 87.4229 14.0977 87.1202 14.0977C86.7979 14.0977 86.5082 14.0358 86.251 13.9121C85.9971 13.7884 85.7969 13.5996 85.6504 13.3457C85.5039 13.0885 85.4307 12.763 85.4307 12.3691C85.4307 11.7897 85.6342 11.3633 86.0411 11.0898C86.448 10.8132 87.0583 10.6602 87.8721 10.6309L88.8194 10.6016V10.3623C88.8194 10.0758 88.7445 9.86589 88.5948 9.73242C88.445 9.59896 88.2367 9.53223 87.9698 9.53223C87.7061 9.53223 87.4473 9.56966 87.1934 9.64453C86.9395 9.7194 86.6856 9.8138 86.4317 9.92773L85.9385 8.92188C86.2282 8.76888 86.5521 8.64844 86.9102 8.56055C87.2715 8.47266 87.6442 8.42871 88.0284 8.42871ZM88.8194 11.4707L88.2432 11.4902C87.7614 11.5033 87.4261 11.5895 87.2373 11.749C87.0518 11.9085 86.959 12.1185 86.959 12.3789C86.959 12.6068 87.0258 12.7695 87.1592 12.8672C87.2927 12.9616 87.4668 13.0088 87.6817 13.0088C88.0007 13.0088 88.2692 12.9144 88.4873 12.7256C88.7087 12.5368 88.8194 12.2682 88.8194 11.9199V11.4707ZM98.1281 8.43848C98.7466 8.43848 99.2137 8.59798 99.5294 8.91699C99.8485 9.23275 100.008 9.74056 100.008 10.4404V14H98.5138V10.8115C98.5138 10.4209 98.4471 10.1263 98.3136 9.92773C98.1802 9.72917 97.9735 9.62988 97.6935 9.62988C97.2996 9.62988 97.0197 9.77148 96.8537 10.0547C96.6877 10.3346 96.6046 10.7367 96.6046 11.2607V14H95.1154V10.8115C95.1154 10.5511 95.0861 10.333 95.0275 10.1572C94.9689 9.98145 94.8794 9.84961 94.7589 9.76172C94.6385 9.67383 94.4839 9.62988 94.2951 9.62988C94.0184 9.62988 93.8003 9.69987 93.6408 9.83984C93.4845 9.97656 93.3722 10.18 93.3039 10.4502C93.2388 10.7171 93.2062 11.0443 93.2062 11.4316V14H91.7169V8.54102H92.8546L93.0548 9.23926H93.1378C93.2485 9.05046 93.3869 8.89746 93.5529 8.78027C93.7222 8.66309 93.9077 8.57682 94.1095 8.52148C94.3114 8.46615 94.5164 8.43848 94.7248 8.43848C95.1252 8.43848 95.4637 8.50358 95.7404 8.63379C96.0203 8.764 96.2352 8.96582 96.3849 9.23926H96.5168C96.6795 8.95931 96.909 8.75586 97.2052 8.62891C97.5047 8.50195 97.8123 8.43848 98.1281 8.43848ZM103.658 8.42871C104.39 8.42871 104.951 8.58822 105.342 8.90723C105.733 9.22624 105.928 9.71126 105.928 10.3623V14H104.888L104.6 13.2578H104.561C104.405 13.4531 104.245 13.6126 104.082 13.7363C103.92 13.86 103.732 13.9512 103.521 14.0098C103.309 14.0684 103.052 14.0977 102.749 14.0977C102.427 14.0977 102.137 14.0358 101.88 13.9121C101.626 13.7884 101.426 13.5996 101.28 13.3457C101.133 13.0885 101.06 12.763 101.06 12.3691C101.06 11.7897 101.263 11.3633 101.67 11.0898C102.077 10.8132 102.687 10.6602 103.501 10.6309L104.449 10.6016V10.3623C104.449 10.0758 104.374 9.86589 104.224 9.73242C104.074 9.59896 103.866 9.53223 103.599 9.53223C103.335 9.53223 103.076 9.56966 102.823 9.64453C102.569 9.7194 102.315 9.8138 102.061 9.92773L101.568 8.92188C101.857 8.76888 102.181 8.64844 102.539 8.56055C102.901 8.47266 103.273 8.42871 103.658 8.42871ZM104.449 11.4707L103.872 11.4902C103.391 11.5033 103.055 11.5895 102.866 11.749C102.681 11.9085 102.588 12.1185 102.588 12.3789C102.588 12.6068 102.655 12.7695 102.788 12.8672C102.922 12.9616 103.096 13.0088 103.311 13.0088C103.63 13.0088 103.898 12.9144 104.116 12.7256C104.338 12.5368 104.449 12.2682 104.449 11.9199V11.4707ZM110.447 8.43848C111.029 8.43848 111.498 8.59798 111.853 8.91699C112.208 9.23275 112.385 9.74056 112.385 10.4404V14H110.896V10.8115C110.896 10.4209 110.824 10.1263 110.681 9.92773C110.541 9.72917 110.32 9.62988 110.017 9.62988C109.561 9.62988 109.25 9.78451 109.084 10.0938C108.918 10.403 108.835 10.849 108.835 11.4316V14H107.346V8.54102H108.484L108.684 9.23926H108.767C108.884 9.05046 109.029 8.89746 109.202 8.78027C109.377 8.66309 109.571 8.57682 109.783 8.52148C109.997 8.46615 110.219 8.43848 110.447 8.43848ZM116.049 8.43848C116.554 8.43848 116.988 8.53613 117.353 8.73145C117.718 8.9235 117.999 9.20345 118.198 9.57129C118.396 9.93913 118.496 10.3883 118.496 10.9189V11.6416H114.975C114.991 12.0615 115.117 12.3919 115.351 12.6328C115.589 12.8704 115.917 12.9893 116.337 12.9893C116.686 12.9893 117.005 12.9535 117.294 12.8818C117.584 12.8102 117.882 12.7028 118.188 12.5596V13.7119C117.918 13.8454 117.635 13.943 117.338 14.0049C117.045 14.0667 116.689 14.0977 116.269 14.0977C115.722 14.0977 115.237 13.9967 114.814 13.7949C114.394 13.5931 114.064 13.2855 113.823 12.8721C113.585 12.4587 113.466 11.9378 113.466 11.3096C113.466 10.6715 113.574 10.141 113.789 9.71777C114.007 9.29134 114.309 8.97233 114.697 8.76074C115.084 8.5459 115.535 8.43848 116.049 8.43848ZM116.059 9.49805C115.769 9.49805 115.528 9.59082 115.336 9.77637C115.148 9.96191 115.039 10.2533 115.009 10.6504H117.099C117.096 10.429 117.055 10.2321 116.977 10.0596C116.902 9.88704 116.788 9.75033 116.635 9.64941C116.486 9.5485 116.293 9.49805 116.059 9.49805Z"
        fill="white"
      />
      <g filter="url(#filter0_i_2198_32993)">
        <path d="M0 23H9V29L4.5 25.8984L0 23Z" fill="#0A55D2" />
      </g>
      <defs>
        <filter
          id="filter0_i_2198_32993"
          x="0"
          y="23"
          width="9"
          height="7"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="1" />
          <feGaussianBlur stdDeviation="2" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
          />
          <feBlend
            mode="normal"
            in2="shape"
            result="effect1_innerShadow_2198_32993"
          />
        </filter>
      </defs>
    </svg>
  );
};
export const Speaker: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="13"
    height="14"
    viewBox="0 0 13 14"
    className={ClassName}
    stroke={stroke}
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M12.3275 0.334961C12.1506 0.33486 11.981 0.405066 11.856 0.530112C11.7309 0.655158 11.6607 0.824786 11.6608 1.00163V1.42611C10.5221 2.83793 8.80792 3.66155 6.99414 3.66829H2.99414C1.89007 3.6695 0.995346 4.56422 0.994141 5.66829V7.00163C0.995346 8.1057 1.89007 9.00042 2.99414 9.00163H3.31667L1.71485 12.7392C1.62642 12.9452 1.64746 13.1817 1.77083 13.3688C1.8942 13.5559 2.10337 13.6685 2.32747 13.6683H4.99414C5.26091 13.6685 5.50202 13.5093 5.60677 13.264L7.42261 9.02696C9.08089 9.14871 10.6149 9.95106 11.6608 11.2437V11.6683C11.6608 12.0365 11.9593 12.335 12.3275 12.335C12.6957 12.335 12.9941 12.0365 12.9941 11.6683V1.00163C12.9942 0.824785 12.924 0.655156 12.799 0.53011C12.6739 0.405063 12.5043 0.334858 12.3275 0.334961ZM2.99414 7.66829C2.62605 7.66805 2.32772 7.36972 2.32747 7.00163V5.66829C2.32772 5.30021 2.62605 5.00188 2.99414 5.00163H3.66081V7.66829H2.99414ZM4.55469 12.335H3.33854L4.76693 9.00163H5.98307L4.55469 12.335ZM11.6608 9.34949C10.3463 8.26657 8.69725 7.67248 6.99414 7.66826H4.99414V5.00159H6.99414C8.69729 4.99724 10.3463 4.40303 11.6608 3.32003V9.34949Z"
      fill="white"
    />
  </svg>
);

export const ExclimationSign: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="16"
    height="16"
    viewBox="0 0 16 16"
    fill={fill}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
    className={ClassName}
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M16 8C16 12.4183 12.4183 16 8 16C3.58172 16 0 12.4183 0 8C0 3.58172 3.58172 0 8 0C12.4183 0 16 3.58172 16 8ZM7.2 11.2C7.2 11.6418 7.55817 12 8 12C8.44183 12 8.8 11.6418 8.8 11.2V8C8.8 7.55817 8.44183 7.2 8 7.2C7.55817 7.2 7.2 7.55817 7.2 8V11.2ZM8 4C8.44183 4 8.8 4.35817 8.8 4.8V4.808C8.8 5.24983 8.44183 5.608 8 5.608C7.55817 5.608 7.2 5.24983 7.2 4.808V4.8C7.2 4.35817 7.55817 4 8 4Z"
      fill="#1164EE"
    />
  </svg>
);
export const ExpandDown: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="12"
    height="8"
    viewBox="0 0 12 8"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10.8 1.60039L6.48482 6.18692C6.21704 6.47155 5.78287 6.47155 5.51508 6.18692L1.19995 1.60039"
      stroke="#1A1A1A"
      stroke-width="2"
      stroke-linecap="round"
    />
  </svg>
);
export const HeartIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="21"
    height="18"
    viewBox="0 0 21 18"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M11.0477 16.8956C14.1726 15.5836 19.5 10.5772 19.5 6.36467V5.91761C19.5 3.20169 17.2838 1 14.55 1C12.8759 1 11.3958 1.82567 10.5 3.08947C9.60417 1.82567 8.12414 1 6.45 1C3.71619 1 1.5 3.20169 1.5 5.91761V6.36467C1.5 10.5807 6.83614 15.4593 9.95999 16.8761C10.3057 17.0329 10.6976 17.0425 11.0477 16.8956Z"
      stroke={stroke}
      stroke-width="2"
      stroke-linejoin="round"
    />
  </svg>
);
export const FilterIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="19"
    height="21"
    viewBox="0 0 19 21"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M0.966014 3.22788C-0.0557648 1.91417 0.880422 0 2.54472 0H16.4554C18.1197 0 19.0559 1.91416 18.0341 3.22788L12.7107 10.0723C12.5742 10.2478 12.5001 10.4638 12.5001 10.6862V16.0858C12.5001 16.6162 12.2894 17.1249 11.9143 17.5L9.91429 19.5C8.65436 20.7599 6.50008 19.8676 6.50008 18.0858V10.6862C6.50008 10.4638 6.42596 10.2478 6.28943 10.0723L0.966014 3.22788ZM16.4554 2H2.54472L7.86814 8.84439C8.27771 9.37099 8.50008 10.0191 8.50008 10.6862V18.0858L10.5001 16.0858V10.6862C10.5001 10.0191 10.7224 9.37099 11.132 8.84439L16.4554 2Z"
      fill={fill}
    />
  </svg>
);
export const MessageIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="16"
    height="14"
    viewBox="0 0 16 14"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M0.800049 2.6002C0.800049 1.27471 1.87457 0.200195 3.20005 0.200195H12.8C14.1255 0.200195 15.2 1.27471 15.2 2.6002V9.0002C15.2 10.3257 14.1255 11.4002 12.8 11.4002H10.0926L9.38924 12.6062C8.76869 13.6702 7.22905 13.6634 6.61794 12.594L5.93579 11.4002H3.20005C1.87457 11.4002 0.800049 10.3257 0.800049 9.0002V2.6002ZM3.20005 1.8002C2.75822 1.8002 2.40005 2.15837 2.40005 2.6002V9.0002C2.40005 9.44202 2.75822 9.8002 3.20005 9.8002H5.93579C6.50996 9.8002 7.04011 10.1079 7.32498 10.6064L8.00713 11.8001L8.71053 10.5941C8.99725 10.1025 9.52352 9.8002 10.0926 9.8002H12.8C13.2419 9.8002 13.6 9.44202 13.6 9.0002V2.6002C13.6 2.15837 13.2419 1.8002 12.8 1.8002H3.20005Z"
      fill="#240046"
    />
  </svg>
);
export const EmptyIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 20 20"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M10 3.65656L8.84255 6.46808C8.42961 7.47113 7.49711 8.21439 6.36095 8.32462L3.24947 8.62649L5.66276 10.8442C6.47442 11.5901 6.80539 12.7062 6.57986 13.753L5.90091 16.9042L8.43465 15.3304C9.39534 14.7337 10.6047 14.7337 11.5653 15.3304L14.0991 16.9042L13.4201 13.753C13.1946 12.7062 13.5256 11.5901 14.3372 10.8442L16.7505 8.62649L13.639 8.32462C12.5029 8.21439 11.5704 7.47113 11.1574 6.46808L10 3.65656ZM10.9176 0.631717C10.5708 -0.210573 9.42917 -0.210572 9.08242 0.631718L6.99314 5.70671C6.8485 6.05804 6.53193 6.29864 6.16782 6.33396L0.908134 6.84426C0.035191 6.92895 -0.317599 8.06475 0.341037 8.67L4.30948 12.3168C4.5842 12.5693 4.70512 12.9586 4.62472 13.3317L3.46333 18.7221C3.27058 19.6167 4.1942 20.3187 4.94802 19.8505L9.48992 17.0293C9.80435 16.834 10.1957 16.834 10.5101 17.0293L15.052 19.8505C15.8058 20.3187 16.7294 19.6167 16.5367 18.7221L15.3753 13.3317C15.2949 12.9586 15.4158 12.5693 15.6905 12.3168L19.659 8.67C20.3176 8.06475 19.9648 6.92895 19.0919 6.84426L13.8322 6.33396C13.4681 6.29864 13.1515 6.05804 13.0069 5.70671L10.9176 0.631717Z"
      fill="#FF8501"
    />
  </svg>
);
export const FillIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 20 20"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10.9176 0.631717C10.5708 -0.210573 9.42917 -0.210572 9.08242 0.631718L6.99314 5.70671C6.8485 6.05804 6.53193 6.29864 6.16782 6.33396L0.908134 6.84426C0.035191 6.92895 -0.317599 8.06475 0.341037 8.67L4.30948 12.3168C4.5842 12.5693 4.70512 12.9586 4.62472 13.3317L3.46333 18.7221C3.27058 19.6167 4.1942 20.3187 4.94802 19.8505L9.48992 17.0293C9.80435 16.834 10.1957 16.834 10.5101 17.0293L15.052 19.8505C15.8058 20.3187 16.7294 19.6167 16.5367 18.7221L15.3753 13.3317C15.2949 12.9586 15.4158 12.5693 15.6905 12.3168L19.659 8.67C20.3176 8.06475 19.9648 6.92895 19.0919 6.84426L13.8322 6.33396C13.4681 6.29864 13.1515 6.05804 13.0069 5.70671L10.9176 0.631717Z"
      fill="#FF8501"
    />
  </svg>
);
export const Light: React.FC<Props> = ({ fill, stroke, ClassName }: Props) => (
  <svg
    width="11"
    height="16"
    viewBox="0 0 11 16"
    fill={fill}
    stroke={stroke}
    className={ClassName}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M8.8933 1.87977C7.65154 0.858486 6.01533 0.451883 4.43997 0.773101C2.3217 1.20098 0.671004 2.86483 0.259965 4.98643C-0.0371904 6.56124 0.383187 8.18653 1.40663 9.41977C1.87576 9.94915 2.14465 10.6261 2.16663 11.3331V13.3331C2.16663 14.4377 3.06206 15.3331 4.16663 15.3331H6.8333C7.93787 15.3331 8.8333 14.4377 8.8333 13.3331V11.4598C8.85567 10.6792 9.14244 9.92939 9.64663 9.3331C11.4853 7.05866 11.1492 3.72777 8.8933 1.86643V1.87977ZM7.49997 13.3331C7.49997 13.7013 7.20149 13.9998 6.8333 13.9998H4.16663C3.79844 13.9998 3.49997 13.7013 3.49997 13.3331V12.6664H7.49997V13.3331ZM8.6133 8.50643C7.94297 9.3015 7.55187 10.2945 7.49997 11.3331H6.16663V9.3331C6.16663 8.96491 5.86815 8.66643 5.49997 8.66643C5.13178 8.66643 4.8333 8.96491 4.8333 9.3331V11.3331H3.49997C3.48238 10.3118 3.1046 9.32961 2.4333 8.55977C1.53235 7.4803 1.26433 6.00707 1.72736 4.67945C2.19038 3.35184 3.31646 2.36482 4.6933 2.07977C5.87131 1.83722 7.09593 2.13761 8.028 2.89774C8.96006 3.65787 9.50062 4.79705 9.49997 5.99977C9.5049 6.91301 9.19136 7.79941 8.6133 8.50643Z"
      fill={fill}
    />
  </svg>
);
export const ClaimIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="30"
    height="36"
    className={ClassName}
    stroke={stroke}
    viewBox="0 0 30 36"
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M25.6521 5.72353e-05C28.0436 5.72353e-05 30 1.9654 30 4.35689V25.6526C30 28.0441 28.0436 30.0005 25.6521 30.0005H21.5897V34.0028H21.59C21.589 34.457 21.3196 34.8675 20.9029 35.0485C20.4866 35.2294 20.0025 35.1463 19.6702 34.8366L14.5464 30.0004H4.35683C1.96534 30.0004 -7.89739e-07 28.044 -7.89739e-07 25.6526V4.35683C-7.89739e-07 1.96535 1.96534 0 4.35683 0L25.6521 5.72353e-05ZM15.1258 5.01241C13.514 5.01369 12.1619 6.32191 12.1603 7.93776V15.7662C12.1616 17.3821 13.5141 18.6989 15.1258 18.7004C16.7376 18.6992 18.0919 17.3821 18.0935 15.7662V7.93776C18.0923 6.32191 16.7376 5.01404 15.1258 5.01241ZM15.1258 7.28893C15.5262 7.28924 15.81 7.5842 15.8103 7.94668V15.7573C15.81 16.1197 15.5258 16.4147 15.1258 16.415C14.7254 16.4147 14.4438 16.1197 14.4435 15.7573V7.94668C14.4438 7.5842 14.7254 7.28924 15.1258 7.28893ZM15.2016 19.7951C15.1764 19.7945 15.1509 19.7951 15.1258 19.7951C13.514 19.7964 12.1619 21.1113 12.1603 22.7272C12.1616 24.343 13.5141 25.6577 15.1258 25.6592C16.7376 25.6579 18.0919 24.343 18.0935 22.7272C18.0923 21.1364 16.7803 19.8369 15.2016 19.7951ZM15.1637 22.0783C15.544 22.0955 15.81 22.3762 15.8103 22.7272C15.81 23.0897 15.5258 23.3757 15.1258 23.376C14.7254 23.3757 14.4438 23.0897 14.4435 22.7272C14.4438 22.3647 14.7254 22.0787 15.1258 22.0783C15.1382 22.0783 15.1516 22.0777 15.1637 22.0783Z"
      fill="#FF8501"
    />
  </svg>
);

export const ClaimAccount: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="12"
    height="13"
    viewBox="0 0 12 13"
    stroke={stroke}
    className={ClassName}
    fill={fill}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M0 1.2C0 0.537234 0.537234 0 1.2 0H10C10.6628 0 11.2 0.537234 11.2 1.2V5.73554C11.2 6.50366 11.1879 7.40814 10.7881 8.18949C10.4326 8.8843 9.8741 9.51163 9.07623 10.2118C8.27961 10.9108 7.21838 11.7043 5.83737 12.722C5.69621 12.8259 5.50389 12.8259 5.36272 12.722C3.98165 11.7043 2.92021 10.9108 2.12386 10.2118C1.32601 9.51163 0.76752 8.88432 0.411977 8.18949C0.01216 7.40805 9.13784e-05 6.50359 9.13784e-05 5.73554L0 1.2ZM7.86766 4.29737C8.03185 4.1496 8.04516 3.89666 7.89739 3.73246C7.74962 3.56826 7.49668 3.55496 7.33248 3.70272L4.93339 5.86192L3.86768 4.90272C3.70348 4.75496 3.45053 4.76826 3.30276 4.93246C3.15499 5.09665 3.1683 5.3496 3.33249 5.49737L4.66589 6.69737C4.81794 6.83425 5.04893 6.83425 5.20097 6.69737L7.86766 4.29737Z"
      fill="#FF8501"
    />
  </svg>
);

export const HandShakIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => (
  <svg
    width="100"
    height="100"
    viewBox="0 0 100 100"
    fill={fill}
    className={ClassName}
    stroke={stroke}
    xmlns="http://www.w3.org/2000/svg"
  >
    <rect
      width="100"
      height="100"
      rx="50"
      fill="url(#paint0_linear_463_26042)"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M61.3629 73.6153L63.0987 74.57C64.5467 75.3664 66.3835 74.8335 67.1801 73.3852C67.9767 71.937 67.4356 70.1146 65.9954 69.3039C67.4397 70.1129 69.2822 69.5636 70.0766 68.1191C70.5629 67.2349 70.549 66.214 70.1377 65.3668L70.5884 65.1793L50.2423 48.9844C44.439 45.0704 40.3955 50.1137 36.4055 47.8684L31.1203 45.4301C30.2272 45.0181 29.1638 45.4058 28.7454 46.2957L23.0698 58.3716C22.8576 58.8233 22.8377 59.2884 23.0107 59.7564C23.1838 60.2246 23.5013 60.565 23.9562 60.7699C25.8419 61.6195 28.7315 62.9195 29.324 63.1494C31.1325 63.8514 30.5363 66.6775 31.5261 67.9677C33.0496 69.9534 33.2981 71.4011 34.5946 72.1458L52.9637 82.6963C54.3967 83.5192 56.2484 82.9597 57.0449 81.5115C57.8412 80.0638 57.3052 78.2317 55.8643 77.4241L58.4661 78.8813C59.9079 79.6886 61.7509 79.1446 62.5474 77.6965C63.3442 76.2483 62.8031 74.4259 61.3629 73.6153Z"
      fill="#FFECE4"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M50.8485 49.467L50.2422 48.9845C44.4388 45.0705 40.3953 50.1138 36.4054 47.8686L31.1201 45.4302C30.2271 45.0182 29.1637 45.4059 28.7453 46.2959L27.4905 48.9659C28.7389 48.3397 30.2258 48.7211 31.8754 49.7102C39.7804 54.4496 42.4962 49.3152 48.6968 51.5069C48.9445 51.2728 49.1883 51.0346 49.428 50.7924C49.883 50.3311 50.3569 49.889 50.8485 49.467ZM64.9574 68.7226L65.9952 69.3038C67.3735 70.0758 69.1186 69.6123 69.9654 68.3046L60.2432 62.778C59.5559 62.391 58.6851 62.6346 58.2981 63.3218C57.9112 64.0091 58.1546 64.8799 58.8418 65.2668C60.9061 66.4487 65.0113 68.753 64.9574 68.7226ZM60.3511 73.0589L53.6844 69.2727C52.9971 68.8858 52.7537 68.0148 53.1407 67.3275C53.5277 66.6402 54.3986 66.3968 55.0859 66.7838L67.0563 73.5903C66.2056 74.8815 64.4761 75.3273 63.0987 74.5699L60.3511 73.0589ZM51.1052 74.5942C51.3194 74.9103 51.5925 74.9891 51.9345 75.1843L56.5987 77.8461L58.4659 78.8814C59.8533 79.6505 61.6036 79.1861 62.4463 77.8661L52.9391 72.4804C52.2518 72.0934 51.3809 72.3368 50.9939 73.0241C50.8567 73.268 50.7941 73.5468 50.8139 73.8259C50.8337 74.105 50.935 74.3721 51.1052 74.5942ZM51.0413 81.5924L52.4019 79.0053L56.9851 81.6147C56.1589 82.9857 54.3619 83.4993 52.9635 82.6963L51.0413 81.5924Z"
      fill="url(#paint1_linear_463_26042)"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M47.9877 75.419C48.9175 74.3864 50.4725 74.0749 51.7496 74.7573C52.1539 74.9727 52.5048 75.2762 52.7762 75.6453C53.4815 76.6045 53.5813 77.8942 53.0191 78.9457L51.1895 82.3669C50.3868 83.8678 48.5018 84.4389 47.001 83.6363C45.7945 82.9911 45.189 81.6464 45.4148 80.3641C44.5254 81.6044 42.8205 82.0282 41.4401 81.2901C40.2588 80.6582 39.6537 79.3558 39.841 78.0981C39.0333 79.6064 37.1579 80.1891 35.6455 79.3802C34.1446 78.5775 33.5734 76.6926 34.3761 75.1919L34.9531 74.1133C34.0101 74.967 32.5908 75.1843 31.4116 74.5536C29.9107 73.7508 29.3396 71.866 30.1422 70.3652L32.0504 66.7974C32.8534 65.2963 34.7375 64.7269 36.2388 65.5282C37.681 66.2979 38.2642 68.0735 37.5948 69.5412C38.5378 68.6771 39.9647 68.4556 41.1501 69.0883C42.4263 69.7695 43.0298 71.2383 42.6881 72.5845C43.6179 71.5519 45.1724 71.2412 46.4498 71.9229C47.726 72.6039 48.3295 74.0728 47.9877 75.419Z"
      fill="#F6DCCD"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M34.953 74.1133C34.01 74.967 32.5908 75.1843 31.4115 74.5536C31.1573 74.4178 30.9236 74.2469 30.717 74.046C31.6659 74.0882 32.0911 73.3402 32.5234 72.5797L35.7654 66.8765C36.0268 66.4167 36.0468 65.8093 35.8451 65.3521C35.9802 65.4015 36.1117 65.4603 36.2387 65.528C37.6809 66.2978 38.2641 68.0734 37.5947 69.5411L34.953 74.1133ZM39.8409 78.0981L42.6885 72.5825C43.0292 71.2368 42.4255 69.769 41.15 69.0883C40.9996 69.0079 40.8428 68.9402 40.6812 68.8859C40.9212 69.4514 40.7963 69.9919 40.7541 70.0738L36.4657 78.3787C36.3139 78.6727 35.7641 79.0204 35.2178 79.104C35.3505 79.2063 35.4931 79.299 35.6454 79.3805C37.1834 80.2029 39.0528 79.5733 39.8409 78.0981ZM51.4021 74.5985C51.5197 74.6437 51.6357 74.6965 51.7496 74.7573C52.154 74.9727 52.5048 75.2761 52.7763 75.6451C53.4815 76.6043 53.5814 77.8941 53.019 78.9455L51.1894 82.3668C50.3868 83.8677 48.5017 84.4388 47.0009 83.6361C46.9842 83.6271 46.9675 83.618 46.951 83.6087C47.272 83.4918 47.4747 83.3149 47.5664 83.1374L51.3852 75.7417C51.5361 75.4501 51.5652 74.9891 51.4021 74.5985ZM45.4147 80.3641C44.5253 81.6044 42.8204 82.0283 41.4401 81.2901C41.34 81.2365 41.243 81.1775 41.1495 81.1133C41.6757 80.8835 42.1198 80.4898 42.4242 79.9003L45.9832 73.008C46.2347 72.5209 46.1809 72.1012 45.971 71.717C46.1361 71.7719 46.2963 71.8408 46.4499 71.9228C47.7261 72.6039 48.3296 74.0728 47.9878 75.419L45.4147 80.3641Z"
      fill="url(#paint2_linear_463_26042)"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M58.4983 58.1138L68.8917 64.0376C69.4319 64.3447 69.8664 64.8083 70.1377 65.3673L76.0025 62.9203C76.8995 62.546 77.3355 61.5227 76.9842 60.6165L72.0891 47.989C71.8968 47.4928 71.5389 47.1402 71.0398 46.9553C70.5407 46.7704 70.0395 46.8047 69.5702 47.0558L66.062 48.9337C61.8716 51.1132 57.8368 43.778 50.2495 48.9828C49.2628 49.657 48.3371 50.466 47.4976 51.3145C45.3902 53.444 42.8198 55.3435 39.9128 57.0401C39.8681 57.0653 39.8295 57.1001 39.7999 57.142C39.7702 57.1839 39.7502 57.2318 39.7412 57.2824C39.7307 57.3326 39.7315 57.3844 39.7434 57.4343C39.7554 57.4841 39.7782 57.5307 39.8103 57.5707C45.8301 65.3167 53.1559 55.0689 58.4983 58.1138Z"
      fill="#F6DCCD"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M66.5596 62.7085L68.8917 64.0378C69.432 64.3449 69.8664 64.8085 70.1378 65.3675L76.0025 62.9204C76.899 62.5464 77.335 61.5242 76.9849 60.6184L75.5492 56.9149C75.6155 58.0925 75.3426 59.1281 74.1313 59.6219L66.5596 62.7085ZM40.625 58.5044C46.481 64.4273 53.3947 55.205 58.4984 58.114C50.4159 52.6396 47.4056 59.8533 40.625 58.5044Z"
      fill="url(#paint3_linear_463_26042)"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M57.7378 40.4052C55.5505 41.9498 52.8813 42.8577 50 42.8577C47.1186 42.8577 44.4495 41.95 42.2622 40.4052L37.7402 42.3981C37.6657 42.432 37.5826 42.4424 37.5021 42.428C37.4215 42.4135 37.3472 42.3749 37.2892 42.3172C37.2297 42.2609 37.1888 42.1879 37.1718 42.1078C37.1549 42.0277 37.1627 41.9444 37.1942 41.8688L39.0682 37.2295C37.4962 35.0308 36.571 32.3379 36.571 29.4289C36.5713 22.0123 42.5836 16 50.0001 16C57.4166 16 63.4289 22.0123 63.4289 29.4288C63.4289 32.3378 62.5037 35.0306 60.9319 37.2294L62.8059 41.8687C62.8374 41.9442 62.8453 42.0276 62.8283 42.1077C62.8113 42.1878 62.7704 42.2608 62.7109 42.3171C62.6528 42.3747 62.5785 42.4133 62.4979 42.4277C62.4174 42.4422 62.3343 42.4318 62.2598 42.3979L57.7378 40.4052Z"
      fill="#A2E19F"
    />
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M59.0252 37.2294L60.8647 41.7832L62.2599 42.3981C62.3344 42.432 62.4175 42.4424 62.498 42.4279C62.5786 42.4135 62.6529 42.3749 62.711 42.3172C62.7705 42.2609 62.8114 42.1879 62.8284 42.1078C62.8453 42.0277 62.8375 41.9444 62.806 41.8688L60.932 37.2295C62.504 35.0308 63.429 32.3379 63.429 29.4289C63.429 22.0123 57.4167 16 50.0002 16C49.6797 16 49.3618 16.0113 49.0469 16.0333C56.0185 16.5224 61.5224 22.3329 61.5224 29.4288C61.5224 32.3378 60.5972 35.0307 59.0252 37.2294Z"
      fill="url(#paint4_linear_463_26042)"
    />
    <g filter="url(#filter0_i_463_26042)">
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M49.9857 28.1293C50.7034 28.1293 51.2853 28.7111 51.2853 29.4288C51.2853 30.1466 50.7034 30.7284 49.9857 30.7284C49.268 30.7284 48.6861 30.1466 48.6861 29.4288C48.6861 28.7113 49.268 28.1293 49.9857 28.1293ZM44.198 28.1293C44.9157 28.1293 45.4976 28.7111 45.4976 29.4288C45.4976 30.1466 44.9157 30.7284 44.198 30.7284C43.4803 30.7284 42.8984 30.1466 42.8984 29.4288C42.8984 28.7113 43.4803 28.1293 44.198 28.1293ZM55.802 28.1293C56.5197 28.1293 57.1015 28.7111 57.1015 29.4288C57.1015 30.1466 56.5197 30.7284 55.802 30.7284C55.0842 30.7284 54.5024 30.1466 54.5024 29.4288C54.5024 28.7113 55.0842 28.1293 55.802 28.1293Z"
        fill="#F7F7F7"
      />
    </g>
    <defs>
      <filter
        id="filter0_i_463_26042"
        x="41.8984"
        y="28.1293"
        width="15.2031"
        height="2.59912"
        filterUnits="userSpaceOnUse"
        color-interpolation-filters="sRGB"
      >
        <feFlood flood-opacity="0" result="BackgroundImageFix" />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="BackgroundImageFix"
          result="shape"
        />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset dx="-1" />
        <feGaussianBlur stdDeviation="0.5" />
        <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.07 0"
        />
        <feBlend
          mode="normal"
          in2="shape"
          result="effect1_innerShadow_463_26042"
        />
      </filter>
      <linearGradient
        id="paint0_linear_463_26042"
        x1="50"
        y1="12.5"
        x2="50"
        y2="84"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#F0F1F5" />
        <stop offset="1" stop-color="#F0F1F5" stop-opacity="0" />
      </linearGradient>
      <linearGradient
        id="paint1_linear_463_26042"
        x1="48.7279"
        y1="45.2655"
        x2="48.7279"
        y2="83.0778"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#FFCBBE" />
        <stop offset="1" stop-color="#FFCBBE" stop-opacity="0" />
      </linearGradient>
      <linearGradient
        id="paint2_linear_463_26042"
        x1="42.0494"
        y1="65.3521"
        x2="42.0494"
        y2="83.9998"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#F1CBBC" />
        <stop offset="1" stop-color="#F1CBBC" stop-opacity="0" />
      </linearGradient>
      <linearGradient
        id="paint3_linear_463_26042"
        x1="58.8654"
        y1="56.0331"
        x2="58.8654"
        y2="65.3675"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#F1CBBC" />
        <stop offset="1" stop-color="#F1CBBC" stop-opacity="0" />
      </linearGradient>
      <linearGradient
        id="paint4_linear_463_26042"
        x1="61.1564"
        y1="42.9609"
        x2="54.051"
        y2="19.0547"
        gradientUnits="userSpaceOnUse"
      >
        <stop offset="0.221319" stop-color="#97CF92" />
        <stop offset="1" stop-color="#97CF92" stop-opacity="0" />
      </linearGradient>
    </defs>
  </svg>
);
export const FavouriteIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="100"
      height="100"
      viewBox="0 0 100 100"
      fill={fill}
      className={ClassName}
      stroke={stroke}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 34.5881C0 18.2161 13.3505 5 29.75 5C37.5696 5 44.6898 8.00411 50 12.9126C55.3102 8.00411 62.4304 5 70.25 5C86.6495 5 100 18.2161 100 34.5881V36.8233C100 49.2271 92.3212 61.9257 83.4692 71.9068C74.518 81.9997 63.3679 90.4379 54.6739 94.0879C51.604 95.3767 48.1944 95.2765 45.2347 93.9342C36.6613 90.0457 25.5461 81.7014 16.5697 71.6879C7.70974 61.8043 0 49.2548 0 36.8233V34.5881Z"
        fill="url(#paint0_linear_2859_35221)"
      />
      <g filter="url(#filter0_i_2859_35221)">
        <path
          d="M12.5 38.441C12.5 26.1621 22.5129 16.25 34.8125 16.25C40.6772 16.25 46.0173 18.5031 50 22.1844C53.9827 18.5031 59.3228 16.25 65.1875 16.25C77.4871 16.25 87.5 26.1621 87.5 38.441V40.1175C87.5 49.4204 81.7409 58.9443 75.1019 66.4301C68.3885 73.9998 60.026 80.3285 53.5054 83.066C51.203 84.0326 48.6458 83.9574 46.426 82.9506C39.9959 80.0342 31.6596 73.7761 24.9273 66.2659C18.2823 58.8532 12.5 49.4411 12.5 40.1175V38.441Z"
          fill="url(#paint1_linear_2859_35221)"
        />
      </g>
      <defs>
        <filter
          id="filter0_i_2859_35221"
          x="12.5"
          y="16.25"
          width="75"
          height="71.5"
          filterUnits="userSpaceOnUse"
          color-interpolation-filters="sRGB"
        >
          <feFlood flood-opacity="0" result="BackgroundImageFix" />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="BackgroundImageFix"
            result="shape"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy="4" />
          <feGaussianBlur stdDeviation="2" />
          <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.41 0"
          />
          <feBlend
            mode="normal"
            in2="shape"
            result="effect1_innerShadow_2859_35221"
          />
        </filter>
        <linearGradient
          id="paint0_linear_2859_35221"
          x1="50"
          y1="5"
          x2="48.4375"
          y2="73.4387"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0.428183" stop-color="#FF8501" stop-opacity="0.1" />
          <stop offset="1" stop-color="white" stop-opacity="0.11" />
        </linearGradient>
        <linearGradient
          id="paint1_linear_2859_35221"
          x1="50"
          y1="16.25"
          x2="50"
          y2="98.5"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0.178642" stop-color="#FF8501" />
          <stop offset="0.975734" stop-color="#FF8501" stop-opacity="0" />
        </linearGradient>
      </defs>
    </svg>
  );
};
export const MoneyIcon: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill={fill}
      className={ClassName}
      stroke={stroke}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M14.5 4H1.5C1.22386 4 1 4.22386 1 4.5V11.5C1 11.7761 1.22386 12 1.5 12H14.5C14.7761 12 15 11.7761 15 11.5V4.5C15 4.22386 14.7761 4 14.5 4Z"
        stroke="black"
        stroke-width="1.25"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M8 9.75C8.9665 9.75 9.75 8.9665 9.75 8C9.75 7.0335 8.9665 6.25 8 6.25C7.0335 6.25 6.25 7.0335 6.25 8C6.25 8.9665 7.0335 9.75 8 9.75Z"
        stroke="black"
        stroke-width="1.25"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M10.5 4L15 8"
        stroke="black"
        stroke-width="1.25"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M10.5 12L15 8"
        stroke="black"
        stroke-width="1.25"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M5.5 4L1 8"
        stroke="black"
        stroke-width="1.25"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M5.5 12L1 8"
        stroke="black"
        stroke-width="1.25"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  );
};

export const MessageIcon2: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg
      width="16"
      height="14"
      viewBox="0 0 16 14"
      fill={fill}
      className={ClassName}
      stroke={stroke}
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M0 2.99998C0 1.67449 1.07452 0.599976 2.4 0.599976H13.6C14.9255 0.599976 16 1.67449 16 2.99998V11C16 12.3255 14.9255 13.4 13.6 13.4H2.4C1.07452 13.4 0 12.3255 0 11V2.99998ZM2.73137 2.19998L7.43432 6.90292C7.74673 7.21534 8.25327 7.21534 8.56569 6.90292L13.2686 2.19998H2.73137ZM14.4 3.33135L9.69706 8.03429C8.7598 8.97155 7.2402 8.97155 6.30295 8.03429L1.6 3.33135V11C1.6 11.4418 1.95817 11.8 2.4 11.8H13.6C14.0418 11.8 14.4 11.4418 14.4 11V3.33135Z"
        fill="#240046"
      />
    </svg>
  );
};

export const Bag: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 24 22" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M6.38255 2.59922C5.90252 2.59922 5.46867 2.88529 5.27958 3.32652L3.01985 8.59922H6C7.3662 8.59922 8.26951 9.6822 8.51485 10.7078C8.67139 11.3622 8.98768 12.0346 9.5118 12.5329C10.0112 13.0076 10.7753 13.3992 12 13.3992C13.2247 13.3992 13.9888 13.0076 14.4882 12.5329C15.0123 12.0346 15.3286 11.3622 15.4851 10.7078C15.7305 9.6822 16.6338 8.59922 18 8.59922H20.9802L18.7204 3.32652C18.5313 2.8853 18.0975 2.59922 17.6175 2.59922H6.38255ZM21.6 10.9992H18C18 10.9992 17.9999 10.9992 17.9999 10.9992C17.9994 10.9994 17.998 10.9998 17.9958 11.0007C17.9891 11.0035 17.9721 11.0122 17.9486 11.0339C17.897 11.0814 17.8435 11.1649 17.8193 11.2662C17.587 12.2371 17.0901 13.3708 16.1418 14.2723C15.1687 15.1974 13.8011 15.7992 12 15.7992C10.1989 15.7992 8.83131 15.1974 7.85823 14.2723C6.90989 13.3708 6.41296 12.2371 6.18071 11.2662C6.15648 11.1649 6.10302 11.0814 6.05145 11.0339C6.02789 11.0122 6.01087 11.0035 6.0042 11.0007C6.00197 10.9998 6.00062 10.9994 6.00008 10.9992C6.00005 10.9992 6.00003 10.9992 6 10.9992H2.4V18.1992C2.4 18.862 2.93726 19.3992 3.6 19.3992H20.4C21.0627 19.3992 21.6 18.862 21.6 18.1992V10.9992ZM3.07363 2.38111C3.64091 1.05745 4.94245 0.199219 6.38255 0.199219H17.6175C19.0576 0.199219 20.3591 1.05745 20.9264 2.38111L23.903 9.32652C23.967 9.47589 24 9.63671 24 9.79922V18.1992C24 20.1874 22.3882 21.7992 20.4 21.7992H3.6C1.61178 21.7992 0 20.1874 0 18.1992V9.79922C0 9.63671 0.0330093 9.47589 0.0970259 9.32652L3.07363 2.38111ZM5.99983 10.9992C5.99975 10.9991 5.99981 10.9991 6 10.9992C5.99995 10.9992 5.99989 10.9992 5.99983 10.9992ZM18 10.9992C18.0002 10.9991 18.0002 10.9991 18.0002 10.9992C18.0001 10.9992 18.0001 10.9992 18 10.9992Z" fill={fill} />
    </svg>
  );
};

export const Bell: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M2.1089 18.2008C0.920363 18.2008 0.10765 17.0004 0.549062 15.8968L2.5141 10.9843C2.5708 10.8425 2.59993 10.6912 2.59993 10.5386L2.59993 8.60078C2.59993 7.20875 3.00766 5.14742 4.26609 3.39961C5.56856 1.59062 7.72882 0.20078 10.9999 0.20078C14.271 0.20078 16.4313 1.59062 17.7338 3.39961C18.9922 5.14742 19.3999 7.20875 19.3999 8.60078L19.3999 10.5386C19.3999 10.6912 19.4291 10.8425 19.4858 10.9843L21.4508 15.8968C21.8922 17.0004 21.0795 18.2008 19.891 18.2008L15.6489 18.2008C15.5088 18.7727 15.2595 19.3884 14.8538 19.9519C14.0913 21.0109 12.831 21.8008 10.9999 21.8008C9.16882 21.8008 7.90856 21.0109 7.14609 19.9519C6.74032 19.3884 6.49109 18.7727 6.351 18.2008L2.1089 18.2008ZM8.88667 18.2008C8.94521 18.3211 9.01389 18.4387 9.09377 18.5496C9.41129 18.9906 9.95103 19.4008 10.9999 19.4008C12.0488 19.4008 12.5886 18.9906 12.9061 18.5496C12.986 18.4387 13.0546 18.3211 13.1132 18.2008L8.88667 18.2008ZM3.17237 15.8008L18.8275 15.8008L17.2574 11.8756C17.0873 11.4504 16.9999 10.9966 16.9999 10.5386L16.9999 8.60078C16.9999 7.59281 16.6877 6.05414 15.7861 4.80195C14.9286 3.61094 13.4888 2.60078 10.9999 2.60078C8.51103 2.60078 7.07129 3.61094 6.21377 4.80195C5.31219 6.05414 4.99993 7.59281 4.99993 8.60078L4.99993 10.5386C4.99993 10.9966 4.91254 11.4504 4.74244 11.8756L3.17237 15.8008Z" fill={fill} />
    </svg>

  );
};

export const Search: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M13.5584 13.5274C14.7604 12.2937 15.5015 10.6041 15.5015 8.74039C15.5015 4.96276 12.4567 1.90039 8.70077 1.90039C4.94482 1.90039 1.90002 4.96276 1.90002 8.74039C1.90002 12.518 4.94482 15.5804 8.70077 15.5804C10.6037 15.5804 12.3241 14.7943 13.5584 13.5274ZM13.5584 13.5274L18.1 18.1004" stroke={stroke} stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
  );
};

export const Annuaire: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 18 15" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M16.7485 0.332031H1.24958C0.567476 0.332031 -0.000976562 0.900484 -0.000976562 1.58259V13.311C-0.000976562 13.9931 0.567476 14.5615 1.24958 14.5615H16.7485C17.4306 14.5615 17.999 13.9931 17.999 13.311V1.58259C17.999 0.881435 17.4306 0.332031 16.7485 0.332031ZM5.3422 1.62038C5.64538 1.62038 5.87272 1.86674 5.87272 2.1509C5.87272 2.45409 5.62636 2.68143 5.3422 2.68143C5.03901 2.68143 4.81167 2.43507 4.81167 2.1509C4.79264 1.84785 5.039 1.62038 5.3422 1.62038ZM3.71273 1.62038C4.01591 1.62038 4.24325 1.86674 4.24325 2.1509C4.24325 2.45409 3.9969 2.68143 3.71273 2.68143C3.40954 2.68143 3.1822 2.43507 3.1822 2.1509C3.16317 1.84785 3.40953 1.62038 3.71273 1.62038ZM2.06421 1.62038C2.3674 1.62038 2.59474 1.86674 2.59474 2.1509C2.59474 2.45409 2.34838 2.68143 2.06421 2.68143C1.78006 2.68143 1.53369 2.43507 1.53369 2.1509C1.53369 1.84785 1.78004 1.62038 2.06421 1.62038ZM16.3884 12.8372C16.3884 12.894 16.3504 12.9319 16.2936 12.9319L1.70419 12.9318C1.64735 12.9318 1.60942 12.8939 1.60942 12.837L1.60955 3.98866H16.3884L16.3884 12.8372Z" fill="#442769" />
      <g clip-path="url(#clip0_3143_52552)">
        <path d="M7.99826 8.21788C7.99826 8.37413 7.86806 8.49653 7.72049 8.49653H7.44271L7.44878 9.88629C7.44878 9.91059 7.44705 9.93316 7.44444 9.9566V10.0972C7.44444 10.2891 7.28906 10.4444 7.09722 10.4444H6.95833C6.94878 10.4444 6.93924 10.4366 6.92969 10.4436C6.91753 10.4366 6.90538 10.4444 6.89323 10.4444H6.40278C6.21094 10.4444 6.05556 10.2891 6.05556 10.0972V9.33333C6.05556 9.17969 5.93142 9.05556 5.77778 9.05556H5.22222C5.06858 9.05556 4.94444 9.17969 4.94444 9.33333V10.0972C4.94444 10.2891 4.78906 10.4444 4.59722 10.4444H4.11198C4.09896 10.4444 4.08594 10.4436 4.07292 10.4427C4.0625 10.4436 4.05208 10.4444 4.04167 10.4444H3.90278C3.71102 10.4444 3.55556 10.2891 3.55556 10.0972V9.125C3.55556 9.11719 3.55582 9.10851 3.55634 9.10069V8.49653H3.27821C3.1217 8.49653 3 8.37413 3 8.21788C3 8.13976 3.02608 8.07031 3.08689 8.00955L5.3125 6.06958C5.37326 6.0087 5.44271 6 5.50347 6C5.56424 6 5.63368 6.0174 5.68663 6.06089L7.90278 8.00955C7.97222 8.07031 8.00781 8.13976 7.99826 8.21788Z" fill="#240046" />
      </g>
      <path d="M10.8366 6.52744H14.2092C14.4745 6.52744 14.6829 6.31902 14.6829 6.05376C14.6829 5.78851 14.4745 5.58008 14.2092 5.58008H10.8366C10.5713 5.58008 10.3629 5.78851 10.3629 6.05376C10.3629 6.31902 10.5713 6.52744 10.8366 6.52744Z" fill="#442769" />
      <path d="M10.8366 8.83994H14.2092C14.4745 8.83994 14.6829 8.63152 14.6829 8.36626C14.6829 8.10101 14.4745 7.89258 14.2092 7.89258H10.8366C10.5713 7.89258 10.3629 8.10101 10.3629 8.36626C10.3629 8.61248 10.5713 8.83994 10.8366 8.83994Z" fill="#442769" />
      <path d="M10.8366 11.131H14.2092C14.4745 11.131 14.6829 10.9225 14.6829 10.6573C14.6829 10.392 14.4745 10.1836 14.2092 10.1836H10.8366C10.5713 10.1836 10.3629 10.392 10.3629 10.6573C10.3629 10.9225 10.5713 11.131 10.8366 11.131Z" fill="#442769" />
      <defs>
        <clipPath id="clip0_3143_52552">
          <rect width="5" height="4.44444" fill="white" transform="translate(3 6)" />
        </clipPath>
      </defs>
    </svg>
  );
};

export const Service: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M9.19666 17.44C8.55898 17.7976 7.88705 17.9986 7.19904 17.9986C5.57326 17.9986 4.03747 16.8772 2.81836 15.2115C1.10503 12.8709 0 9.48498 0 7.19876C0 3.22532 3.22571 0 7.19887 0C11.172 0 14.3977 3.22559 14.3977 7.19876C14.3977 7.91394 14.2898 8.73658 14.0888 9.60121C14.7787 9.60242 15.4219 9.60416 15.9072 9.60657C16.7212 9.60657 17.4333 10.1556 17.6403 10.9433C17.6409 10.9457 17.6409 10.9475 17.6415 10.9494C18.1179 12.8423 18.1185 14.7404 17.6493 16.6464C17.6488 16.6488 17.6481 16.6517 17.6476 16.6548C17.4405 17.4469 16.7243 18 15.9061 18C14.5222 18 11.873 18 10.4908 17.9922C9.98933 17.9922 9.52682 17.7834 9.19687 17.4396L9.19666 17.44ZM16.4795 11.2465C16.9055 12.9432 16.9055 14.6455 16.4855 16.3545C16.4159 16.6172 16.1778 16.8003 15.906 16.8003C14.5238 16.8003 11.8777 16.8003 10.4942 16.7925H10.4905C10.2211 16.7925 9.98598 16.6101 9.91769 16.3498C9.50015 14.656 9.50135 12.9556 9.91233 11.248C9.98129 10.9833 10.2201 10.7992 10.4931 10.7992C11.8777 10.7992 14.5234 10.7992 15.9035 10.8069H15.9072C16.1754 10.8069 16.4105 10.9875 16.4795 11.2467L16.4795 11.2465ZM12.8609 9.59939C13.0793 8.73472 13.1981 7.90918 13.1981 7.1988C13.1981 3.8879 10.5099 1.20006 7.199 1.20006C3.88814 1.20006 1.19995 3.88804 1.19995 7.1988C1.19995 9.28382 2.22393 12.3675 3.78677 14.5028C4.75266 15.8216 5.91109 16.7984 7.199 16.7984C7.71791 16.7984 8.21644 16.6394 8.68914 16.3639C8.28957 14.5699 8.31126 12.7693 8.74739 10.9607C8.74792 10.9578 8.74859 10.9554 8.74913 10.9523C8.95307 10.1555 9.6712 9.59867 10.493 9.59867C11.1079 9.59867 11.9706 9.59867 12.8609 9.59921L12.8609 9.59939ZM10.8057 16.1981H12.0025C12.3337 16.1981 12.6024 15.9293 12.6024 15.5981C12.6024 15.2669 12.3337 14.9981 12.0025 14.9981H10.8057C10.4745 14.9981 10.2058 15.2669 10.2058 15.5981C10.2058 15.9293 10.4745 16.1981 10.8057 16.1981ZM10.8015 14.3981H12.5983C12.9295 14.3981 13.1982 14.1293 13.1982 13.7981C13.1982 13.4669 12.9295 13.1981 12.5983 13.1981H10.8015C10.4704 13.1981 10.2016 13.4669 10.2016 13.7981C10.2016 14.1293 10.4704 14.3981 10.8015 14.3981ZM7.19798 4.79862C5.87335 4.79862 4.79835 5.8738 4.79835 7.19866C4.79835 8.52352 5.87335 9.59871 7.19798 9.59871C8.52192 9.59871 9.5976 8.52352 9.5976 7.19866C9.5976 5.8738 8.52192 4.79862 7.19798 4.79862ZM7.19798 5.99864C7.86027 5.99864 8.39779 6.53625 8.39779 7.19866C8.39779 7.86107 7.86027 8.39868 7.19798 8.39868C6.53568 8.39868 5.99816 7.86107 5.99816 7.19866C5.99816 6.53625 6.53568 5.99864 7.19798 5.99864Z" fill={fill} />
    </svg>
  );
};

export const Home: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 18 16" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M17.9937 7.98438C17.9937 8.54688 17.525 8.9875 16.9937 8.9875H15.9937L16.0156 13.9906C16.0156 14.0781 16.0094 14.1594 16 14.2437V14.75C16 15.4406 15.4406 16 14.75 16H14.25C14.2156 16 14.1813 15.9719 14.1469 15.9969C14.1031 15.9719 14.0594 16 14.0156 16H12.25C11.5594 16 11 15.4406 11 14.75V12C11 11.4469 10.5531 11 10 11H8C7.44688 11 7 11.4469 7 12V14.75C7 15.4406 6.44063 16 5.75 16H4.00313C3.95625 16 3.90937 15.9969 3.8625 15.9937C3.825 15.9969 3.7875 16 3.75 16H3.25C2.55969 16 2 15.4406 2 14.75V11.25C2 11.2219 2.00094 11.1906 2.00281 11.1625V8.9875H1.00156C0.438125 8.9875 0 8.54688 0 7.98438C0 7.70312 0.093875 7.45312 0.312813 7.23438L8.325 0.2505C8.54375 0.0313125 8.79375 0 9.0125 0C9.23125 0 9.48125 0.062625 9.67188 0.219187L17.65 7.23438C17.9 7.45312 18.0281 7.70312 17.9937 7.98438Z" fill={fill} />
    </svg>
  );
};

export const MyAccount: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M9.99999 9.27536C12.5613 9.27536 14.6377 7.199 14.6377 4.63768C14.6377 2.07636 12.5613 0 9.99999 0C7.43867 0 5.3623 2.07636 5.3623 4.63768C5.3623 7.199 7.43867 9.27536 9.99999 9.27536Z" fill={fill} />
      <path d="M9.99997 11.5938C5.35758 11.5938 1.59418 15.3572 1.59418 19.9995H18.4058C18.4058 15.3572 14.6424 11.5938 9.99997 11.5938Z" fill={fill} />
    </svg>
  );
};

export const Offer: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M18 8C17.7348 8 17.4804 8.10536 17.2929 8.29289C17.1054 8.48043 17 8.73478 17 9V15.893C16.9995 16.1864 16.8827 16.4677 16.6752 16.6752C16.4677 16.8827 16.1864 16.9995 15.893 17H3.107C2.81357 16.9995 2.5323 16.8827 2.32482 16.6752C2.11733 16.4677 2.00053 16.1864 2 15.893V3.107C2.00053 2.81357 2.11733 2.5323 2.32482 2.32482C2.5323 2.11733 2.81357 2.00053 3.107 2H10C10.2652 2 10.5196 1.89464 10.7071 1.70711C10.8946 1.51957 11 1.26522 11 1C11 0.734784 10.8946 0.48043 10.7071 0.292893C10.5196 0.105357 10.2652 0 10 0H3.107C2.2833 0.00105841 1.49363 0.328742 0.911188 0.911188C0.328742 1.49363 0.00105841 2.2833 0 3.107V15.893C0.00105841 16.7167 0.328742 17.5064 0.911188 18.0888C1.49363 18.6713 2.2833 18.9989 3.107 19H15.893C16.7167 18.9989 17.5064 18.6713 18.0888 18.0888C18.6713 17.5064 18.9989 16.7167 19 15.893V9C19 8.73478 18.8946 8.48043 18.7071 8.29289C18.5196 8.10536 18.2652 8 18 8Z" fill="#240046" />
      <path d="M18.4 4.3063C18.7462 3.95945 18.9407 3.48939 18.9407 2.9993C18.9407 2.50921 18.7462 2.03915 18.4 1.6923L17.307 0.5993C16.9602 0.253059 16.4901 0.0585937 16 0.0585938C15.5099 0.0585938 15.0399 0.253059 14.693 0.5993L13.854 1.4383L17.561 5.1453L18.4 4.3063Z" fill="#240046" />
      <path d="M6.5 8.99952V11.9995C6.5 12.1321 6.55268 12.2593 6.64645 12.3531C6.74022 12.4468 6.86739 12.4995 7 12.4995H10C10.0657 12.4996 10.1308 12.4868 10.1915 12.4617C10.2523 12.4367 10.3075 12.3999 10.354 12.3535L16.146 6.56052L12.439 2.85352L6.646 8.64552C6.5996 8.69203 6.56282 8.74724 6.53777 8.80799C6.51272 8.86873 6.49988 8.93381 6.5 8.99952Z" fill="#240046" />
    </svg>
  );
};

export const Depart: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 18 22" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M5.84992 3.48863L8.55212 0.717492C8.65684 0.608378 8.79532 0.554688 8.93381 0.554688C9.07229 0.554688 9.21044 0.608811 9.31584 0.717058L12.018 3.4882C12.2292 3.70469 12.2292 4.05541 12.018 4.27191C11.8069 4.4884 11.4649 4.4884 11.2538 4.27191L9.47425 2.44598V7.75965C9.47425 8.06603 9.23224 8.29829 8.94901 8.29829C8.66579 8.29829 8.39338 8.06603 8.39338 7.75965V2.44598L6.6133 4.27148C6.40218 4.48798 6.06018 4.48798 5.84908 4.27148C5.63796 4.05499 5.63881 3.70512 5.84992 3.48863Z" fill={fill} />
      <path d="M2.11584 8.35309L8.99999 9.18995L15.885 8.35309C16.0735 8.32943 16.2562 8.42804 16.3435 8.5988L17.5162 10.9482C17.7665 11.4525 17.4994 12.064 16.9565 12.2189L12.3637 13.5348C11.9728 13.6446 11.5537 13.4813 11.3456 13.1065L8.99999 9.18995L6.65436 13.1065C6.44624 13.4813 6.02717 13.6446 5.63624 13.5348L1.04258 12.2189C0.500894 12.064 0.232946 11.4525 0.484863 10.9482L1.65767 8.5988C1.74289 8.42804 1.92654 8.32943 2.11584 8.35309ZM9.03092 11.0186L10.5722 13.5939C10.9912 14.2928 11.8265 14.5998 12.6112 14.3998L16.2 13.3742V18.0769C16.2 18.6968 15.7782 19.2377 15.1762 19.3899L9.43592 20.8269C9.14904 20.9002 8.85092 20.9002 8.56404 20.8269L2.82374 19.3899C2.22158 19.2377 1.79999 18.6968 1.79999 18.0769V13.3742L5.38874 14.3998C6.17342 14.5998 7.00874 14.2928 7.42781 13.5939L8.96904 11.0186H9.03092Z" fill={fill} />
    </svg>
  );
};

export const Devis: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M17.4 1.2H15V0.6C15 0.26866 14.7316 0 14.4 0H2.4C2.06839 0 1.8 0.26866 1.8 0.6V1.8C0.807463 1.8 0 2.60746 0 3.6C0 4.59254 0.807463 5.4 1.8 5.4V17.4C1.8 17.7313 2.06839 18 2.4 18H10.8C10.9752 18 11.1415 17.9235 11.2552 17.7905L14.8552 13.5905C14.949 13.4818 15 13.3433 15 13.2V2.39999H16.8V16.2H13.8C13.4684 16.2 13.2 16.4687 13.2 16.8C13.2 17.1313 13.4684 17.4 13.8 17.4H17.4C17.7316 17.4 18 17.1313 18 16.8V1.79999C18 1.46865 17.7316 1.2 17.4 1.2ZM1.2 3.6C1.2 3.2692 1.46893 3 1.8 3V4.2C1.46893 4.2 1.2 3.9308 1.2 3.6ZM3 5.4H3.6C3.93161 5.4 4.2 5.13134 4.2 4.8C4.2 4.46866 3.93161 4.2 3.6 4.2H3V1.2H13.8V12.6H10.8C10.4684 12.6 10.2 12.8687 10.2 13.2V16.8H3V5.4ZM13.0954 13.8L11.4 15.778V13.8H13.0954Z" fill={fill} />
      <path d="M6.00021 7.2H10.8002C11.1318 7.2 11.4002 6.93134 11.4002 6.6C11.4002 6.26866 11.1318 6 10.8002 6H6.00021C5.6686 6 5.40021 6.26866 5.40021 6.6C5.40021 6.93134 5.6686 7.2 6.00021 7.2Z" fill={fill} />
      <path d="M6.00021 5.39922H10.8002C11.1318 5.39922 11.4002 5.13056 11.4002 4.79922C11.4002 4.46788 11.1318 4.19922 10.8002 4.19922H6.00021C5.6686 4.19922 5.40021 4.46788 5.40021 4.79922C5.40021 5.13056 5.6686 5.39922 6.00021 5.39922Z" fill={fill} />
      <path d="M6.00021 3.59844H10.8002C11.1318 3.59844 11.4002 3.32978 11.4002 2.99844C11.4002 2.6671 11.1318 2.39844 10.8002 2.39844H6.00021C5.6686 2.39844 5.40021 2.6671 5.40021 2.99844C5.40021 3.32978 5.6686 3.59844 6.00021 3.59844Z" fill={fill} />
      <path d="M7.72154 13.6097C7.66922 13.562 7.60647 13.562 7.55415 13.6097C7.33444 13.8481 7.0625 13.9913 6.78004 13.9913C6.38252 13.9913 6.00594 13.7171 5.77578 13.264H6.82192C6.88468 13.264 6.94743 13.2044 6.94743 13.1209V12.7036C6.94743 12.6321 6.89511 12.5606 6.82192 12.5606L5.58753 12.5605C5.5771 12.477 5.5771 12.4055 5.5771 12.3459C5.5771 12.2744 5.5771 12.2029 5.58753 12.1194H6.82192C6.88468 12.1194 6.94743 12.0597 6.94743 11.9763V11.5829C6.94743 11.5114 6.89511 11.4398 6.82192 11.4398H5.7863C6.00601 10.9868 6.38259 10.7126 6.79056 10.7126C7.07302 10.7126 7.34497 10.8437 7.56467 11.0941C7.61698 11.1418 7.67974 11.1537 7.73205 11.0941L8.14002 10.6768C8.16096 10.6529 8.18183 10.6172 8.18183 10.5814C8.18183 10.5456 8.17139 10.5099 8.15045 10.486C7.78429 10.0568 7.30316 9.81836 6.80107 9.81836C5.98514 9.81836 5.23197 10.4741 4.93907 11.4517H4.48915C4.4264 11.4517 4.36365 11.5114 4.36365 11.5948V12.0121C4.36365 12.0836 4.41597 12.1552 4.48915 12.1552H4.80299C4.79256 12.2387 4.79256 12.3102 4.79256 12.3817C4.79256 12.4532 4.79256 12.5248 4.80299 12.5963H4.48915C4.4264 12.5963 4.36365 12.6559 4.36365 12.7393V13.1328C4.36365 13.2044 4.41597 13.2759 4.48915 13.2759H4.9285C5.2214 14.2536 5.97456 14.9093 6.79049 14.9093C7.29259 14.9093 7.7633 14.6708 8.13988 14.2416C8.16082 14.2178 8.17126 14.182 8.17126 14.1462C8.17126 14.1105 8.16082 14.0747 8.12945 14.0508L7.72154 13.6097Z" fill={fill} />
    </svg>
  );
};

export const Favorite: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 20 18" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M10.4929 16.1068C13.3053 14.9261 18.1 10.4203 18.1 6.62898V6.22663C18.1 3.7823 16.1055 1.80078 13.645 1.80078C12.1383 1.80078 10.8063 2.54388 10 3.6813C9.19378 2.54388 7.86175 1.80078 6.35502 1.80078C3.8946 1.80078 1.90002 3.7823 1.90002 6.22663V6.62898C1.90002 10.4234 6.70255 14.8142 9.51402 16.0893C9.82514 16.2304 10.1779 16.239 10.4929 16.1068Z" stroke={stroke} stroke-width="2" stroke-linejoin="round" />
    </svg>
  );
};

export const Settings: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M8.27935 0.322266C8.18444 0.327491 8.09347 0.361892 8.01887 0.420788C7.94426 0.479684 7.88968 0.560204 7.86257 0.651304L7.32515 2.97001C7.18838 3.02162 7.05547 3.0784 6.92193 3.13776L4.90322 1.87516C4.82017 1.82612 4.72339 1.80554 4.62756 1.81648C4.53174 1.82743 4.4421 1.8693 4.37225 1.9358L1.94193 4.36807C1.87402 4.43845 1.83127 4.52928 1.8203 4.62646C1.80934 4.72365 1.83077 4.82175 1.88128 4.90549L3.13805 6.92162C3.07935 7.05065 3.02128 7.18936 2.97031 7.32485L0.6587 7.85581C0.56337 7.87966 0.47865 7.93446 0.41782 8.01163C0.35699 8.08881 0.323489 8.18401 0.322571 8.28227V11.7229C0.325697 11.8195 0.360196 11.9124 0.420845 11.9876C0.481495 12.0628 0.564993 12.1162 0.6587 12.1397L2.96773 12.6694C3.01999 12.8074 3.08193 12.9449 3.14257 13.079L1.87935 15.0952C1.83031 15.1782 1.8097 15.275 1.82064 15.3708C1.83159 15.4666 1.87349 15.5563 1.93999 15.6261L4.37289 18.059C4.44275 18.1255 4.53239 18.1674 4.62821 18.1784C4.72403 18.1893 4.82081 18.1687 4.90386 18.1197L6.91999 16.8565C7.05354 16.9165 7.18644 16.9726 7.32322 17.0242L7.86064 19.3429C7.88395 19.4367 7.93729 19.5203 8.01253 19.581C8.08777 19.6417 8.18079 19.6761 8.27741 19.679H11.7181C11.8146 19.6759 11.9075 19.6414 11.9827 19.5807C12.0579 19.5201 12.1113 19.4366 12.1348 19.3429L12.6722 17.0242C12.809 16.9726 12.9419 16.9158 13.0755 16.8565L15.0916 18.1197C15.1747 18.1687 15.2714 18.1893 15.3673 18.1784C15.4631 18.1674 15.5527 18.1255 15.6226 18.059L18.0555 15.6261C18.122 15.5563 18.1639 15.4666 18.1748 15.3708C18.1858 15.275 18.1652 15.1782 18.1161 15.0952L16.8529 13.079C16.9135 12.9442 16.9755 12.8074 17.0277 12.6694L19.3393 12.1384C19.4332 12.1151 19.5168 12.0618 19.5775 11.9865C19.6381 11.9113 19.6726 11.8182 19.6755 11.7216V8.28227C19.674 8.18454 19.6402 8.09003 19.5794 8.01348C19.5186 7.93694 19.4342 7.88265 19.3393 7.85904L17.0277 7.32808C16.9761 7.19259 16.9187 7.05711 16.86 6.92485L18.1168 4.90872C18.1673 4.82498 18.1887 4.72688 18.1777 4.62969C18.1668 4.53251 18.124 4.44168 18.0561 4.3713L15.6232 1.9384C15.5534 1.8719 15.4637 1.82999 15.3679 1.81904C15.2721 1.8081 15.1753 1.82872 15.0922 1.87776L13.0761 3.14099C12.9432 3.08163 12.8097 3.02485 12.6729 2.97324L12.1355 0.654533C12.1108 0.562041 12.0569 0.479979 11.9818 0.42067C11.9067 0.361361 11.8144 0.327984 11.7187 0.325495L8.27935 0.322266ZM8.61547 1.18227H11.3845L11.8884 3.37969C11.9053 3.4499 11.9393 3.51484 11.9874 3.56875C12.0354 3.62265 12.0961 3.66387 12.1639 3.68873C12.4254 3.77813 12.6812 3.88371 12.9297 4.00485C12.9953 4.03644 13.0678 4.05115 13.1406 4.04765C13.2134 4.04416 13.2841 4.02258 13.3464 3.98485L15.2619 2.78872L17.211 4.73775L16.0148 6.65323C15.9772 6.71557 15.9556 6.78633 15.9521 6.85909C15.9486 6.93185 15.9633 7.00433 15.9948 7.07C16.1136 7.31683 16.2169 7.57089 16.3039 7.83065C16.3284 7.90063 16.3702 7.96324 16.4255 8.01266C16.4808 8.06207 16.5477 8.09668 16.62 8.11323L18.8174 8.6171V11.379L16.62 11.8829C16.5477 11.8995 16.4808 11.9341 16.4255 11.9835C16.3702 12.0329 16.3284 12.0955 16.3039 12.1655C16.2168 12.4248 16.1136 12.6784 15.9948 12.9248C15.9622 12.9913 15.9469 13.065 15.9503 13.139C15.9538 13.213 15.976 13.285 16.0148 13.3481L17.211 15.2565L15.2619 17.2055L13.3464 16.0094C13.2841 15.9717 13.2133 15.9501 13.1406 15.9466C13.0678 15.9431 12.9953 15.9578 12.9297 15.9894C12.6812 16.1105 12.4254 16.216 12.1639 16.3055C12.0961 16.3303 12.0354 16.3716 11.9874 16.4255C11.9393 16.4794 11.9053 16.5443 11.8884 16.6145L11.3774 18.819H8.62257L8.1116 16.6145C8.09467 16.5443 8.06066 16.4794 8.01261 16.4255C7.96455 16.3716 7.90393 16.3303 7.83612 16.3055C7.57456 16.216 7.3188 16.1105 7.07031 15.9894C7.00466 15.9578 6.93216 15.9431 6.85939 15.9466C6.78662 15.95 6.71587 15.9716 6.65354 16.0094L4.73805 17.2055L2.78902 15.2565L3.98515 13.3481C4.02395 13.285 4.04613 13.213 4.04963 13.139C4.05313 13.065 4.03783 12.9913 4.00515 12.9248C3.88637 12.6784 3.78316 12.4248 3.69612 12.1655C3.67151 12.0956 3.62961 12.0331 3.57434 11.9838C3.51906 11.9345 3.4522 11.9 3.37999 11.8835L1.18257 11.379V8.6171L3.37999 8.11323C3.4522 8.09674 3.51906 8.06223 3.57434 8.01293C3.62961 7.96363 3.67151 7.90114 3.69612 7.83128C3.78317 7.57196 3.88638 7.31834 4.00515 7.07193C4.03674 7.00627 4.05145 6.93379 4.04796 6.86102C4.04447 6.78825 4.02288 6.71748 3.98515 6.65516L2.78902 4.73968L4.73805 2.79065L6.65354 3.98678C6.71587 4.02451 6.78662 4.04609 6.85939 4.04958C6.93216 4.05308 7.00466 4.03837 7.07031 4.00678C7.31878 3.88564 7.57455 3.78006 7.83612 3.69066C7.90393 3.6658 7.96455 3.62458 8.01261 3.57067C8.06066 3.51677 8.09467 3.45183 8.1116 3.38162L8.61547 1.1842V1.18227ZM9.99999 5.26871C9.06429 5.26871 8.14961 5.54618 7.3716 6.06603C6.5936 6.58587 5.98722 7.32475 5.62915 8.18922C5.27107 9.0537 5.17738 10.0049 5.35993 10.9227C5.54247 11.8404 5.99305 12.6834 6.65469 13.345C7.31633 14.0066 8.15931 14.4572 9.07702 14.6397C9.99474 14.8223 10.946 14.7286 11.8105 14.3705C12.6749 14.0124 13.4138 13.4061 13.9336 12.6281C14.4535 11.8501 14.731 10.9354 14.731 9.99968C14.7293 8.74548 14.2303 7.54312 13.3434 6.65626C12.4565 5.7694 11.2542 5.27042 9.99999 5.26871ZM9.99999 6.12872C10.7656 6.12872 11.514 6.35574 12.1506 6.78108C12.7872 7.20643 13.2833 7.81102 13.5763 8.51834C13.8693 9.22567 13.9459 10.004 13.7966 10.7549C13.6472 11.5058 13.2785 12.1955 12.7372 12.7369C12.1958 13.2782 11.5061 13.6469 10.7552 13.7963C10.0043 13.9456 9.22596 13.869 8.51863 13.576C7.81131 13.283 7.20675 12.7869 6.7814 12.1503C6.35605 11.5137 6.12902 10.7653 6.12902 9.99968C6.12817 9.4911 6.22772 8.98735 6.42195 8.51732C6.61618 8.04729 6.90129 7.62021 7.26091 7.26058C7.62053 6.90096 8.0476 6.61588 8.51763 6.42165C8.98766 6.22741 9.49141 6.12787 9.99999 6.12872Z" fill={fill} stroke={stroke} />
    </svg>
  );
};

export const Hamburger: React.FC<Props> = ({
  fill,
  stroke,
  ClassName,
}: Props) => {
  return (
    <svg className={ClassName} viewBox="0 0 29 21" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M1.75753 0.412252C1.56767 0.409575 1.37918 0.444548 1.203 0.515138C1.02682 0.585728 0.866461 0.690527 0.731254 0.823446C0.596047 0.956365 0.488683 1.11475 0.415401 1.2894C0.34212 1.46405 0.304382 1.65148 0.304382 1.8408C0.304382 2.03012 0.34212 2.21755 0.415401 2.3922C0.488683 2.56685 0.596047 2.72524 0.731254 2.85816C0.866461 2.99108 1.02682 3.09588 1.203 3.16647C1.37918 3.23706 1.56767 3.27203 1.75753 3.26935H27.5469C27.7367 3.27203 27.9252 3.23706 28.1014 3.16647C28.2776 3.09588 28.438 2.99108 28.5732 2.85816C28.7084 2.72524 28.8157 2.56685 28.889 2.3922C28.9623 2.21755 29 2.03012 29 1.8408C29 1.65148 28.9623 1.46405 28.889 1.2894C28.8157 1.11475 28.7084 0.956365 28.5732 0.823446C28.438 0.690527 28.2776 0.585728 28.1014 0.515138C27.9252 0.444548 27.7367 0.409575 27.5469 0.412252H1.75753ZM1.75753 8.98356C1.56767 8.98088 1.37918 9.01585 1.203 9.08644C1.02682 9.15703 0.866461 9.26183 0.731254 9.39475C0.596047 9.52767 0.488683 9.68606 0.415401 9.86071C0.34212 10.0354 0.304382 10.2228 0.304382 10.4121C0.304382 10.6014 0.34212 10.7889 0.415401 10.9635C0.488683 11.1382 0.596047 11.2965 0.731254 11.4295C0.866461 11.5624 1.02682 11.6672 1.203 11.7378C1.37918 11.8084 1.56767 11.8433 1.75753 11.8407H27.5469C27.7367 11.8433 27.9252 11.8084 28.1014 11.7378C28.2776 11.6672 28.438 11.5624 28.5732 11.4295C28.7084 11.2965 28.8157 11.1382 28.889 10.9635C28.9623 10.7889 29 10.6014 29 10.4121C29 10.2228 28.9623 10.0354 28.889 9.86071C28.8157 9.68606 28.7084 9.52767 28.5732 9.39475C28.438 9.26183 28.2776 9.15703 28.1014 9.08644C27.9252 9.01585 27.7367 8.98088 27.5469 8.98356H1.75753ZM1.75753 17.5549C1.56767 17.5522 1.37918 17.5872 1.203 17.6578C1.02682 17.7283 0.866461 17.8331 0.731254 17.9661C0.596047 18.099 0.488683 18.2574 0.415401 18.432C0.34212 18.6067 0.304382 18.7941 0.304382 18.9834C0.304382 19.1727 0.34212 19.3602 0.415401 19.5348C0.488683 19.7095 0.596047 19.8679 0.731254 20.0008C0.866461 20.1337 1.02682 20.2385 1.203 20.3091C1.37918 20.3797 1.56767 20.4146 1.75753 20.412H27.5469C27.7367 20.4146 27.9252 20.3797 28.1014 20.3091C28.2776 20.2385 28.438 20.1337 28.5732 20.0008C28.7084 19.8679 28.8157 19.7095 28.889 19.5348C28.9623 19.3602 29 19.1727 29 18.9834C29 18.7941 28.9623 18.6067 28.889 18.432C28.8157 18.2574 28.7084 18.099 28.5732 17.9661C28.438 17.8331 28.2776 17.7283 28.1014 17.6578C27.9252 17.5872 27.7367 17.5522 27.5469 17.5549H1.75753Z" fill={fill}/>
</svg>
  );
};
